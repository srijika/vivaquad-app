{"ast":null,"code":"import _objectSpread from\"/var/www/html/project/vivaquad/admin-vivaquad/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import fetch from'dva/fetch';function parseJSON(response){return response.json();}function checkStatus(response){if(response.status>=200&&response.status<300){return response;}var error=new Error(response.statusText);error.response=response;throw error;}/**\r\n * Requests a URL, returning a promise.\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n * @return {object}           An object containing either \"data\" or \"err\"\r\n */export default function request(url,options){var newOptions=_objectSpread({},options);//...defaultOptions,\nif(newOptions.method==='POST'||newOptions.method==='PUT'){if(!(newOptions.body instanceof FormData)){newOptions.headers=_objectSpread({Accept:'application/json; ','Content-Type':'application/json; charset=utf-8',Authorization:'Bearer '+window.localStorage.getItem('token')},newOptions.headers);newOptions.body=JSON.stringify(newOptions.body);}else{newOptions.headers=_objectSpread({Accept:'application/json',Authorization:'Bearer '+window.localStorage.getItem('token')},newOptions.headers);newOptions.body=newOptions.body;}}else{newOptions.headers=_objectSpread({Accept:'application/json',Authorization:'Bearer '+window.localStorage.getItem('token')},newOptions.headers);}return fetch(process.env.REACT_APP_ApiUrl+url,newOptions).then(checkStatus).then(parseJSON).then(function(data){if(newOptions.method==='DELETE'||data.status===204){return data.text?data.text():data;}return data;}).catch(function(err){console.log(err);return err;});}","map":{"version":3,"sources":["/var/www/html/project/vivaquad/admin-vivaquad/src/utils/request.js"],"names":["fetch","parseJSON","response","json","checkStatus","status","error","Error","statusText","request","url","options","newOptions","method","body","FormData","headers","Accept","Authorization","window","localStorage","getItem","JSON","stringify","process","env","REACT_APP_ApiUrl","then","data","text","catch","err","console","log"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,KAAkB,WAAlB,CAEA,QAASC,CAAAA,SAAT,CAAmBC,QAAnB,CAA6B,CAC3B,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAED,QAASC,CAAAA,WAAT,CAAqBF,QAArB,CAA+B,CAC7B,GAAIA,QAAQ,CAACG,MAAT,EAAmB,GAAnB,EAA0BH,QAAQ,CAACG,MAAT,CAAkB,GAAhD,CAAqD,CACnD,MAAOH,CAAAA,QAAP,CACD,CACD,GAAMI,CAAAA,KAAK,CAAG,GAAIC,CAAAA,KAAJ,CAAUL,QAAQ,CAACM,UAAnB,CAAd,CACAF,KAAK,CAACJ,QAAN,CAAiBA,QAAjB,CACA,KAAMI,CAAAA,KAAN,CACD,CAED;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,cAAe,SAASG,CAAAA,OAAT,CAAiBC,GAAjB,CAAsBC,OAAtB,CAA+B,CAE5C,GAAMC,CAAAA,UAAU,kBAAQD,OAAR,CAAhB,CAAmC;AACnC,GAAIC,UAAU,CAACC,MAAX,GAAsB,MAAtB,EAAgCD,UAAU,CAACC,MAAX,GAAsB,KAA1D,CAAiE,CAC/D,GAAI,EAAED,UAAU,CAACE,IAAX,WAA2BC,CAAAA,QAA7B,CAAJ,CAA4C,CAC1CH,UAAU,CAACI,OAAX,gBACEC,MAAM,CAAE,oBADV,CAEE,eAAgB,iCAFlB,CAGEC,aAAa,CAAE,UAAYC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAH7B,EAIKT,UAAU,CAACI,OAJhB,EAMAJ,UAAU,CAACE,IAAX,CAAkBQ,IAAI,CAACC,SAAL,CAAeX,UAAU,CAACE,IAA1B,CAAlB,CACD,CARD,IAQO,CACLF,UAAU,CAACI,OAAX,gBACEC,MAAM,CAAE,kBADV,CAEEC,aAAa,CAAE,UAAYC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAF7B,EAGKT,UAAU,CAACI,OAHhB,EAKAJ,UAAU,CAACE,IAAX,CAAkBF,UAAU,CAACE,IAA7B,CACD,CACF,CAjBD,IAkBK,CACHF,UAAU,CAACI,OAAX,gBACEC,MAAM,CAAE,kBADV,CAEEC,aAAa,CAAE,UAAYC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAF7B,EAGKT,UAAU,CAACI,OAHhB,EAKD,CAED,MAAOhB,CAAAA,KAAK,CAACwB,OAAO,CAACC,GAAR,CAAYC,gBAAZ,CAA+BhB,GAAhC,CAAqCE,UAArC,CAAL,CACJe,IADI,CACCvB,WADD,EAEJuB,IAFI,CAEC1B,SAFD,EAGJ0B,IAHI,CAGC,SAAAC,IAAI,CAAI,CACZ,GAAIhB,UAAU,CAACC,MAAX,GAAsB,QAAtB,EAAkCe,IAAI,CAACvB,MAAL,GAAgB,GAAtD,CAA2D,CACzD,MAAOuB,CAAAA,IAAI,CAACC,IAAL,CAAYD,IAAI,CAACC,IAAL,EAAZ,CAA0BD,IAAjC,CACD,CACD,MAAOA,CAAAA,IAAP,CACD,CARI,EAUJE,KAVI,CAUE,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,MAAOA,CAAAA,GAAP,CACD,CAbI,CAAP,CAcD","sourcesContent":["import fetch from 'dva/fetch';\r\n\r\nfunction parseJSON(response) {\r\n  return response.json();\r\n}\r\n\r\nfunction checkStatus(response) {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return response;\r\n  }\r\n  const error = new Error(response.statusText);\r\n  error.response = response;\r\n  throw error;\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise.\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n * @return {object}           An object containing either \"data\" or \"err\"\r\n */\r\n\r\nexport default function request(url, options) {\r\n\r\n  const newOptions = { ...options }; //...defaultOptions,\r\n  if (newOptions.method === 'POST' || newOptions.method === 'PUT') {\r\n    if (!(newOptions.body instanceof FormData)) {\r\n      newOptions.headers = {\r\n        Accept: 'application/json; ',\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n        Authorization: 'Bearer ' + window.localStorage.getItem('token'),\r\n        ...newOptions.headers,\r\n      };\r\n      newOptions.body = JSON.stringify(newOptions.body);\r\n    } else {\r\n      newOptions.headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + window.localStorage.getItem('token'),\r\n        ...newOptions.headers,\r\n      };\r\n      newOptions.body = newOptions.body;\r\n    }\r\n  }\r\n  else {\r\n    newOptions.headers = {\r\n      Accept: 'application/json',\r\n      Authorization: 'Bearer ' + window.localStorage.getItem('token'),\r\n      ...newOptions.headers,\r\n    };\r\n  }\r\n\r\n  return fetch(process.env.REACT_APP_ApiUrl + url, newOptions)\r\n    .then(checkStatus)\r\n    .then(parseJSON)\r\n    .then(data => {\r\n      if (newOptions.method === 'DELETE' || data.status === 204) {\r\n        return data.text ? data.text() : data;\r\n      }\r\n      return data;\r\n    }\r\n    )\r\n    .catch(err => {\r\n      console.log(err);\r\n      return err\r\n    });\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}