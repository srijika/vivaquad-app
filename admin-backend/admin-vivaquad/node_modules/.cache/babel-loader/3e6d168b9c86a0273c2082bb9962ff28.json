{"ast":null,"code":"\"use strict\";\n\nvar iterateObject = require(\"iterate-object\"),\n    regexEscape = require(\"regex-escape\"),\n    he = require(\"he\"); //const DECODE_MAP = require(\"./character-map\")\n//const ENCODE_MAP = {};\n//\n//iterateObject(DECODE_MAP, (value, name) => {\n//    ENCODE_MAP[value] = name;\n//});\n\n\nmodule.exports = {\n  /**\n   * decode\n   * Decodes an encoded string.\n   *\n   * @name decode\n   * @function\n   * @param {String} input The encoded string.\n   * @returns {String} The decoded string.\n   */\n  decode: function decode(input) {\n    return he.decode(input);\n  }\n  /**\n   * encode\n   * Encodes a string.\n   *\n   * @name encode\n   * @function\n   * @param {String} input The string that must be encoded.\n   * @returns {String} The encoded string.\n   */\n  ,\n  encode: function encode(input) {\n    return he.encode(input);\n  }\n};","map":{"version":3,"sources":["/var/www/html/project/vivaquad/admin-vivaquad/node_modules/html-encoder-decoder/lib/index.js"],"names":["iterateObject","require","regexEscape","he","module","exports","decode","input","encode"],"mappings":"AAAA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA3B;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,cAAD,CADzB;AAAA,IAEIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAFhB,C,CAIA;AACA;AACA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AAC3B,WAAOJ,EAAE,CAACG,MAAH,CAAUC,KAAV,CAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBiB;AAwBbC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBD,KAAhB,EAAuB;AAC3B,WAAOJ,EAAE,CAACK,MAAH,CAAUD,KAAV,CAAP;AACH;AA1BY,CAAjB","sourcesContent":["\"use strict\";\n\nvar iterateObject = require(\"iterate-object\"),\n    regexEscape = require(\"regex-escape\"),\n    he = require(\"he\");\n\n//const DECODE_MAP = require(\"./character-map\")\n//const ENCODE_MAP = {};\n//\n//iterateObject(DECODE_MAP, (value, name) => {\n//    ENCODE_MAP[value] = name;\n//});\n\nmodule.exports = {\n    /**\n     * decode\n     * Decodes an encoded string.\n     *\n     * @name decode\n     * @function\n     * @param {String} input The encoded string.\n     * @returns {String} The decoded string.\n     */\n    decode: function decode(input) {\n        return he.decode(input);\n    }\n\n    /**\n     * encode\n     * Encodes a string.\n     *\n     * @name encode\n     * @function\n     * @param {String} input The string that must be encoded.\n     * @returns {String} The encoded string.\n     */\n    ,\n    encode: function encode(input) {\n        return he.encode(input);\n    }\n};"]},"metadata":{},"sourceType":"script"}