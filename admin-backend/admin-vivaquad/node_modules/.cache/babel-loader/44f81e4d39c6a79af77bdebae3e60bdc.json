{"ast":null,"code":"import { getDashboardData, getprofile, updateprofile, deleteUser } from '../services/api';\nimport { message } from 'antd';\nexport default {\n  namespace: 'account',\n  state: {\n    dashborddetail: {\n      count: 0\n    },\n    detail: {\n      count: 0\n    },\n    del: {\n      count: 0\n    },\n    add: {\n      count: 0\n    },\n    edit: {\n      count: 0\n    }\n  },\n  subscriptions: {\n    setup(_ref) {\n      let {\n        dispatch,\n        history\n      } = _ref;\n    }\n\n  },\n  effects: {\n    *getDashbordDetail(_ref2, _ref3) {\n      let {\n        payload\n      } = _ref2;\n      let {\n        call,\n        put\n      } = _ref3;\n      const response = yield call(getDashboardData, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      yield put({\n        type: 'dashborddetail',\n        ...response\n      });\n    },\n\n    *getDetail(_ref4, _ref5) {\n      let {\n        payload\n      } = _ref4;\n      let {\n        call,\n        put\n      } = _ref5;\n      const response = yield call(getprofile, payload); // console.log(payload._id)\n\n      if (payload._id) {\n        if (!response.status) {\n          message.error(response.msg || response.message || response.err, 5);\n        }\n\n        yield put({\n          type: 'detail',\n          ...response\n        });\n      }\n    },\n\n    *editItem(_ref6, _ref7) {\n      let {\n        payload,\n        history\n      } = _ref6;\n      let {\n        call,\n        put\n      } = _ref7;\n      console.log(history.history);\n      const response = yield call(updateprofile, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || \"Account Updated!\", 5);\n      }\n\n      if (response.status) {\n        message.success(\"Profile Updated Successfull\" || response.message || response.err, 5);\n        history.history.push('/');\n      }\n\n      yield put({\n        type: 'edit',\n        ...response\n      });\n    },\n\n    *deleteItem(_ref8, _ref9) {\n      let {\n        payload\n      } = _ref8;\n      let {\n        call,\n        put\n      } = _ref9;\n      const response = yield call(deleteUser, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      if (response.status) {\n        message.success(\"User Deleted Successfully!\", 5);\n      }\n\n      yield put({\n        type: 'del',\n        ...response\n      });\n    },\n\n    *clearAction(_ref10, _ref11) {\n      let {\n        payload\n      } = _ref10;\n      let {\n        call,\n        put\n      } = _ref11;\n      yield put({\n        type: 'clear'\n      });\n    }\n\n  },\n  reducers: {\n    dashborddetail(state, action) {\n      action.count = state.dashborddetail.count + 1;\n      return { ...state,\n        dashborddetail: action\n      };\n    },\n\n    list(state, action) {\n      return { ...state,\n        list: action\n      };\n    },\n\n    detail(state, action) {\n      action.count = state.detail.count + 1;\n      return { ...state,\n        detail: action\n      };\n    },\n\n    edit(state, action) {\n      action.count = state.edit.count + 1;\n      return { ...state,\n        edit: action\n      };\n    },\n\n    del(state, action) {\n      action.count = state.del.count + 1;\n      return { ...state,\n        del: action\n      };\n    },\n\n    clear(state, action) {\n      return { ...state,\n        edit: {\n          count: 0\n        },\n        del: {\n          count: 0\n        }\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["/var/www/html/project/vivaquad/admin-vivaquad/src/models/account.js"],"names":["getDashboardData","getprofile","updateprofile","deleteUser","message","namespace","state","dashborddetail","count","detail","del","add","edit","subscriptions","setup","dispatch","history","effects","getDashbordDetail","payload","call","put","response","status","error","msg","err","type","getDetail","_id","editItem","console","log","success","push","deleteItem","clearAction","reducers","action","list","clear"],"mappings":"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","sourcesContent":["import {getDashboardData, getprofile, updateprofile, deleteUser} from '../services/api'\r\nimport {message} from 'antd'; \r\nexport default {\r\n  namespace: 'account',\r\n\r\n  state: {\r\n    dashborddetail:{count:0},\r\n    detail:{count:0},\r\n    del:{count:0},\r\n    add:{count:0},\r\n    edit:{count:0}  \r\n\t},  \r\n  subscriptions: {\r\n    setup({ dispatch, history }) { \r\n    },\r\n  },\r\n\r\n  effects: {\r\n    *getDashbordDetail({ payload }, { call, put }) {\r\n      const response = yield call(getDashboardData, payload); \r\n      if(!response.status) {message.error(response.msg || response.message || response.err, 5);}\r\n      yield put({ type: 'dashborddetail', ...response});\r\n    },\r\n    *getDetail({ payload }, { call, put }) {\r\n      const response = yield call(getprofile, payload);\r\n      // console.log(payload._id)\r\n      if(payload._id){\r\n        if(!response.status) {message.error(response.msg || response.message || response.err, 5);}\r\n        yield put({ type: 'detail', ...response});\r\n      }\r\n\r\n     \r\n    },\r\n    *editItem({ payload , history }, { call, put }) {\r\n      console.log(history.history)\r\n      const response = yield call(updateprofile, payload); \r\n      if(!response.status) {message.error(response.msg || response.message || \"Account Updated!\", 5);}\r\n      if(response.status) {message.success(\"Profile Updated Successfull\" || response.message || response.err, 5);\r\n      history.history.push('/')\r\n    } \r\n      yield put({ type: 'edit', ...response});\r\n    },\r\n    *deleteItem({ payload }, { call, put }) {\r\n      const response = yield call(deleteUser, payload); \r\n      if(!response.status) {message.error(response.msg || response.message || response.err, 5);}\r\n      if(response.status) {message.success(\"User Deleted Successfully!\", 5);} \r\n      yield put({ type: 'del', ...response});\r\n    },\r\n\t*clearAction({ payload }, { call, put }) {\r\n      yield put({ type: 'clear'});\r\n    },\r\n  },\r\n\r\n  reducers: {\r\n    dashborddetail(state, action) {\r\n      action.count = state.dashborddetail.count+1;\r\n      return { ...state, dashborddetail:action };\r\n    },\r\n    list(state, action) {\r\n      return { ...state, list:action };\r\n    },\r\n    detail(state, action) {\r\n\t\taction.count = state.detail.count+1;\r\n      return { ...state, detail:action };\r\n    },\r\n    edit(state, action) {\r\n\t\taction.count = state.edit.count+1;\r\n\t\treturn { ...state, edit:action };\r\n    },\r\n    del(state, action) {\r\n\t\taction.count = state.del.count+1;\r\n\t\treturn { ...state, del:action };\r\n    },\r\n\tclear(state, action) {\r\n\t\treturn { ...state, edit:{count:0}, del:{count:0}};\r\n    },\r\n  },\r\n};"]},"metadata":{},"sourceType":"module"}