{"ast":null,"code":"import _regeneratorRuntime from\"/var/www/html/project/vivaquad/admin-vivaquad/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/var/www/html/project/vivaquad/admin-vivaquad/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{uploadFiles}from'../services/api';import{message}from'antd';export default{namespace:'global',state:{toggleval:false,upload:{count:0},uploadsingle:{count:0}},subscriptions:{setup:function setup(_ref){var dispatch=_ref.dispatch,history=_ref.history;}},effects:{uploadFile:/*#__PURE__*/_regeneratorRuntime.mark(function uploadFile(_ref2,_ref3){var payload,call,put,response,fileList;return _regeneratorRuntime.wrap(function uploadFile$(_context){while(1){switch(_context.prev=_context.next){case 0:payload=_ref2.payload;call=_ref3.call,put=_ref3.put;console.log('file',payload);response={};fileList=payload.map(function(item){return item.image;});_context.next=7;return put(_objectSpread({type:'upload'},_objectSpread(_objectSpread({},response),{},{file:fileList})));case 7:case\"end\":return _context.stop();}}},uploadFile);}),uploadFileSingle:/*#__PURE__*/_regeneratorRuntime.mark(function uploadFileSingle(_ref4,_ref5){var payload,call,put,response;return _regeneratorRuntime.wrap(function uploadFileSingle$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:payload=_ref4.payload;call=_ref5.call,put=_ref5.put;response={};_context2.next=5;return put(_objectSpread({type:'uploadsingle'},_objectSpread(_objectSpread({},response),{},{file:payload[0].image})));case 5:case\"end\":return _context2.stop();}}},uploadFileSingle);}),clearAction:/*#__PURE__*/_regeneratorRuntime.mark(function clearAction(_ref6,_ref7){var payload,call,put;return _regeneratorRuntime.wrap(function clearAction$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:payload=_ref6.payload;call=_ref7.call,put=_ref7.put;_context3.next=4;return put({type:'clear'});case 4:case\"end\":return _context3.stop();}}},clearAction);})},reducers:{toggle:function toggle(val){console.log(val);return{toggleval:!val.toggleval};},minus:function minus(count){return count-1;},upload:function upload(state,action){action.count=state.upload.count+1;return _objectSpread(_objectSpread({},state),{},{upload:action});},uploadsingle:function uploadsingle(state,action){action.count=state.uploadsingle.count+1;return _objectSpread(_objectSpread({},state),{},{uploadsingle:action});},clear:function clear(state,action){return _objectSpread(_objectSpread({},state),{},{upload:{count:0},uploadsingle:{count:0}});}}};","map":{"version":3,"sources":["/var/www/html/project/vivaquad/admin-vivaquad/src/models/global.js"],"names":["uploadFiles","message","namespace","state","toggleval","upload","count","uploadsingle","subscriptions","setup","dispatch","history","effects","uploadFile","payload","call","put","console","log","response","fileList","map","item","image","type","file","uploadFileSingle","clearAction","reducers","toggle","val","minus","action","clear"],"mappings":"8TAAA,OAAQA,WAAR,KAA0B,iBAA1B,CACA,OAAQC,OAAR,KAAsB,MAAtB,CACA,cAAe,CACbC,SAAS,CAAE,QADE,CAEbC,KAAK,CAAC,CACLC,SAAS,CAAC,KADL,CAELC,MAAM,CAAC,CAACC,KAAK,CAAC,CAAP,CAFF,CAGLC,YAAY,CAAC,CAACD,KAAK,CAAC,CAAP,CAHR,CAFO,CAObE,aAAa,CAAE,CACbC,KADa,qBACgB,IAArBC,CAAAA,QAAqB,MAArBA,QAAqB,CAAXC,OAAW,MAAXA,OAAW,CAC5B,CAFY,CAPF,CAWbC,OAAO,CAAE,CACTC,UADS,kOACIC,OADJ,OACIA,OADJ,CACiBC,IADjB,OACiBA,IADjB,CACuBC,GADvB,OACuBA,GADvB,CAETC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAoBJ,OAApB,EACQK,QAHC,CAGU,EAHV,CAICC,QAJD,CAIYN,OAAO,CAACO,GAAR,CAAa,SAACC,IAAD,QAAWA,CAAAA,IAAI,CAACC,KAAhB,EAAb,CAJZ,iBAKL,MAAMP,CAAAA,GAAG,gBAAGQ,IAAI,CAAE,QAAT,iCAA0BL,QAA1B,MAAoCM,IAAI,CAAEL,QAA1C,IAAT,CALK,2DAOTM,gBAPS,wOAOUZ,OAPV,OAOUA,OAPV,CAOuBC,IAPvB,OAOuBA,IAPvB,CAO6BC,GAP7B,OAO6BA,GAP7B,CAQCG,QARD,CAQY,EARZ,kBASH,MAAMH,CAAAA,GAAG,gBAAGQ,IAAI,CAAE,cAAT,iCAAgCL,QAAhC,MAA0CM,IAAI,CAAEX,OAAO,CAAC,CAAD,CAAP,CAAWS,KAA3D,IAAT,CATG,kEAWTI,WAXS,qNAWKb,OAXL,OAWKA,OAXL,CAWkBC,IAXlB,OAWkBA,IAXlB,CAWwBC,GAXxB,OAWwBA,GAXxB,kBAYL,MAAMA,CAAAA,GAAG,CAAC,CAAEQ,IAAI,CAAE,OAAR,CAAD,CAAT,CAZK,6DAXI,CA0BbI,QAAQ,CAAE,CACRC,MADQ,iBACDC,GADC,CACI,CACVb,OAAO,CAACC,GAAR,CAAYY,GAAZ,EACA,MAAO,CAAC1B,SAAS,CAAC,CAAC0B,GAAG,CAAC1B,SAAhB,CAAP,CACD,CAJO,CAKR2B,KALQ,gBAKFzB,KALE,CAKK,CAAE,MAAOA,CAAAA,KAAK,CAAG,CAAf,CAAkB,CALzB,CAOXD,MAPW,iBAOJF,KAPI,CAOG6B,MAPH,CAOW,CACrBA,MAAM,CAAC1B,KAAP,CAAeH,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAlC,CACA,sCAAYH,KAAZ,MAAmBE,MAAM,CAAC2B,MAA1B,GACG,CAVO,CAWXzB,YAXW,uBAWEJ,KAXF,CAWS6B,MAXT,CAWiB,CAC3BA,MAAM,CAAC1B,KAAP,CAAeH,KAAK,CAACI,YAAN,CAAmBD,KAAnB,CAAyB,CAAxC,CACA,sCAAYH,KAAZ,MAAmBI,YAAY,CAACyB,MAAhC,GACG,CAdO,CAeXC,KAfW,gBAeL9B,KAfK,CAeE6B,MAfF,CAeU,CACpB,sCAAY7B,KAAZ,MAAmBE,MAAM,CAAC,CAACC,KAAK,CAAC,CAAP,CAA1B,CAAqCC,YAAY,CAAC,CAACD,KAAK,CAAC,CAAP,CAAlD,GACG,CAjBO,CA1BG,CAAf","sourcesContent":["import {uploadFiles} from '../services/api'\r\nimport {message} from 'antd'; \r\nexport default {\r\n  namespace: 'global',\r\n  state:{\r\n\t  toggleval:false,\r\n\t  upload:{count:0},\r\n\t  uploadsingle:{count:0}\r\n\t },\r\n  subscriptions: {\r\n    setup({ dispatch, history }) { \r\n    },\r\n  },\r\n  effects: {\r\n\t*uploadFile({ payload }, { call, put }) {\r\n\t\tconsole.log('file', payload)\r\n\t\t  const response = {}; \r\n      const fileList = payload.map( (item) =>  item.image ); \r\n      yield put({ type: 'upload', ...{...response, file: fileList}});\r\n    },\r\n\t*uploadFileSingle({ payload }, { call, put }) {\r\n\t\t    const response = {};\r\n        yield put({ type: 'uploadsingle', ...{...response, file: payload[0].image }});\r\n    },\r\n\t*clearAction({ payload }, { call, put }) {\r\n      yield put({ type: 'clear',});\r\n    },\r\n  },\r\n  reducers: {\r\n    toggle(val) { \r\n      console.log(val);\r\n      return {toggleval:!val.toggleval};\r\n    },\r\n    minus(count) { return count - 1 },\r\n\t\r\n\tupload(state, action) {\r\n\t\taction.count = state.upload.count+1;\r\n\t\treturn { ...state, upload:action };\r\n    },\r\n\tuploadsingle(state, action) {\r\n\t\taction.count = state.uploadsingle.count+1;\r\n\t\treturn { ...state, uploadsingle:action };\r\n    },\r\n\tclear(state, action) {\r\n\t\treturn { ...state, upload:{count:0}, uploadsingle:{count:0} };\r\n    },\r\n\t\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}