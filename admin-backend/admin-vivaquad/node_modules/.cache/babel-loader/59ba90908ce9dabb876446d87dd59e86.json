{"ast":null,"code":"var _jsxFileName = \"/var/www/html/project/vivaquad/admin-vivaquad/src/components/sharing/text-editor/index.jsx\";\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Typography } from 'antd';\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { convertToHTML } from 'draft-convert'; //import htmlToText from 'html-to-text';\n\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport styles from './style.less';\nconst {\n  Text\n} = Typography;\nconst toolbar = {\n  options: ['inline', 'link', 'textAlign', 'list'],\n  list: {\n    inDropdown: true\n  },\n  textAlign: {\n    inDropdown: true\n  }\n};\n\nconst TextEditor = props => {\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\n  const [isFirstCall, setfirstCall] = useState(false);\n  useEffect(() => {\n    let unmounted = false;\n\n    if (isFirstCall == false && props.data) {\n      const blocksFromHtml = htmlToDraft(props.data);\n      const {\n        contentBlocks,\n        entityMap\n      } = blocksFromHtml;\n      const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\n      const editorState = EditorState.createWithContent(contentState);\n      console.log(\"contentBlock : \", editorState);\n      setEditorState(editorState);\n      setfirstCall(true);\n      return () => {\n        unmounted = true;\n      };\n    }\n  }, [props]);\n\n  const onEditorStateChange = editorState => {\n    console.log(\"onEditorStateChange : \", convertToHTML(editorState.getCurrentContent()));\n    setEditorState(editorState);\n    props.returnVal(convertToHTML(editorState.getCurrentContent()));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '0 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Editor, {\n    editorState: editorState,\n    textAlignment: \"left\",\n    wrapperClassName: \"wrapperClassName\",\n    editorClassName: \"mainEditorStyle EditorStyle\",\n    toolbarClassName: \"toolbarStyle wrapperStyle\",\n    toolbar: toolbar,\n    onEditorStateChange: onEditorStateChange,\n    onDownArrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }));\n};\n\nexport default TextEditor;","map":{"version":3,"sources":["/var/www/html/project/vivaquad/admin-vivaquad/src/components/sharing/text-editor/index.jsx"],"names":["SearchOutlined","Typography","React","useRef","useEffect","useState","Editor","EditorState","convertToRaw","ContentState","convertToHTML","htmlToDraft","styles","Text","toolbar","options","list","inDropdown","textAlign","TextEditor","props","editorState","setEditorState","createEmpty","isFirstCall","setfirstCall","unmounted","data","blocksFromHtml","contentBlocks","entityMap","contentState","createFromBlockArray","createWithContent","console","log","onEditorStateChange","getCurrentContent","returnVal","padding"],"mappings":"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","sourcesContent":["import { SearchOutlined } from '@ant-design/icons';\r\nimport {Typography } from 'antd'\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { convertToHTML } from 'draft-convert';\r\n//import htmlToText from 'html-to-text';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nimport styles from './style.less'; \r\nconst { Text } = Typography;\r\nconst toolbar = { options: ['inline','link', 'textAlign','list'], list: { inDropdown: true }, textAlign: { inDropdown: true }, }\r\n\r\nconst TextEditor = props => {\r\n\r\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\r\n  const [isFirstCall, setfirstCall] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tlet unmounted = false;\r\n\t\tif(isFirstCall == false && props.data){\r\n\t\t\tconst blocksFromHtml = htmlToDraft(props.data);\r\n\t\t\tconst { contentBlocks, entityMap } = blocksFromHtml;\r\n\t\t\tconst contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\r\n\t\t\tconst editorState = EditorState.createWithContent(contentState);\r\n\t\t\tconsole.log(\"contentBlock : \", editorState);\r\n\t\t\t setEditorState(editorState)\r\n\t\t\t setfirstCall(true);\r\n\t\t\treturn () => {\r\n\t\t\t\tunmounted = true;\r\n\t\t\t}\r\n\t\t}\r\n    },[props])\r\n\t\r\n\tconst onEditorStateChange = (editorState) => {\r\n\t\tconsole.log(\"onEditorStateChange : \", convertToHTML(editorState.getCurrentContent()));\r\n\t\tsetEditorState(editorState);\r\n\t\tprops.returnVal(convertToHTML(editorState.getCurrentContent()))\r\n\t}\r\n\t\r\n  return (\r\n    <div style={{textAlign:'center', padding:'0 0'}}>\r\n\t\t<Editor editorState={editorState} textAlignment={\"left\"} wrapperClassName=\"wrapperClassName\" editorClassName={\"mainEditorStyle EditorStyle\"} toolbarClassName={\"toolbarStyle wrapperStyle\"} toolbar={toolbar} onEditorStateChange={onEditorStateChange} onDownArrow />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextEditor;\r\n"]},"metadata":{},"sourceType":"module"}