{"ast":null,"code":"import _regeneratorRuntime from\"/var/www/html/project/vivaquad/admin-vivaquad/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/var/www/html/project/vivaquad/admin-vivaquad/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/var/www/html/project/vivaquad/admin-vivaquad/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback,Fragment,useEffect,useRef}from'react';import{Button,Row,Col,Upload,Modal}from'antd';import ImgCrop from'antd-img-crop';import{connect}from'dva';import styles from'./index.less';var CropImage=function CropImage(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),disableBtn=_useState2[0],setDisableBtn=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),count=_useState4[0],setCount=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),fileList=_useState6[0],setFileList=_useState6[1];var inputRef=useRef();var dispatch=props.dispatch;useEffect(function(){var unmounted=false;return function(){unmounted=true;};},[props]);var onChange=function onChange(_ref){var newFileList=_ref.fileList;setFileList(newFileList);};var onPreview=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(file){var src,image,imgWindow;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:src=file.url;if(src){_context.next=5;break;}_context.next=4;return new Promise(function(resolve){var reader=new FileReader();reader.readAsDataURL(file.originFileObj);reader.onload=function(){return resolve(reader.result);};});case 4:src=_context.sent;case 5:image=new Image();image.src=src;imgWindow=window.open(src);imgWindow.document.write(image.outerHTML);case 9:case\"end\":return _context.stop();}}},_callee);}));return function onPreview(_x){return _ref2.apply(this,arguments);};}();var onFinish=function onFinish(){setDisableBtn(true);var list=[];fileList.map(function(item){return list.push({image:item.originFileObj,view:item.thumbUrl});});dispatch({type:'global/uploadFileSingle',payload:list});};var cancelFun=function cancelFun(){setDisableBtn(false);props.closeFun();};var dummyUploadRequest=function dummyUploadRequest(_ref3){var file=_ref3.file,onSuccess=_ref3.onSuccess;setTimeout(function(){onSuccess(\"ok\");},0);};useEffect(function(){var unmounted=false;if(props.resetVal&&props.resetVal.length===0){setFileList([]);}return function(){unmounted=true;};},[props.resetVal]);useEffect(function(){var unmounted=false;var upload=props.global.uploadsingle;if(!unmounted&&0>count&&(upload.files.length>0||upload.status===\"done\")){setCount(0);setDisableBtn(false);setFileList([]);props.returnImg({urls:upload.files,file:upload.file});}else if(!unmounted&&0>count&&upload.status!==\"done\"){setDisableBtn(false);setCount(0);}return function(){unmounted=true;};},[props.global.uploadsingle]);return/*#__PURE__*/React.createElement(Modal,{visible:props.visible,title:\"Upload Image's\",okText:\"Upload\",onCancel:cancelFun,onOk:onFinish,okButtonProps:{disabled:disableBtn}},/*#__PURE__*/React.createElement(Upload,{customRequest:dummyUploadRequest,listType:\"picture-card\",fileList:fileList,onChange:onChange,onPreview:onPreview},fileList.length<(props.limit||1)&&'+ Upload'));};//export default CropImage;\nexport default connect(function(_ref4){var global=_ref4.global;return{global:global};})(CropImage);","map":{"version":3,"sources":["/var/www/html/project/vivaquad/admin-vivaquad/src/components/sharing/crop-image/index.jsx"],"names":["React","useState","useCallback","Fragment","useEffect","useRef","Button","Row","Col","Upload","Modal","ImgCrop","connect","styles","CropImage","props","disableBtn","setDisableBtn","count","setCount","fileList","setFileList","inputRef","dispatch","unmounted","onChange","newFileList","onPreview","file","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","document","write","outerHTML","onFinish","list","map","item","push","view","thumbUrl","type","payload","cancelFun","closeFun","dummyUploadRequest","onSuccess","setTimeout","resetVal","length","upload","global","uploadsingle","files","status","returnImg","urls","visible","disabled","limit"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, Fragment, useEffect, useRef } from 'react';\r\nimport { Button, Row, Col, Upload, Modal } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { connect } from 'dva';\r\n\r\nimport styles from './index.less';\r\n\r\nconst CropImage = props =>{\r\n\tconst [disableBtn, setDisableBtn] = useState(false);\r\n\tconst [count, setCount] = useState(0)\r\n\tconst [fileList, setFileList] = useState([])\r\n\tconst inputRef = useRef();\r\n\tconst {dispatch} = props;\r\n\t\r\n\tuseEffect(() => {\r\n\t\tlet unmounted = false;\r\n\t\treturn () => {unmounted = true; }\r\n    },[props])\r\n\t\r\n\tconst onChange = ({ fileList: newFileList }) => {\r\n\t\tsetFileList(newFileList);\r\n\t  };\r\n\r\n\tconst onPreview = async file => {\r\n\t\tlet src = file.url;\r\n\t\tif (!src) {\r\n\t\t  src = await new Promise(resolve => {\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\treader.readAsDataURL(file.originFileObj);\r\n\t\t\treader.onload = () => resolve(reader.result);\r\n\t\t  });\r\n\t\t}\r\n\t\tconst image = new Image();\r\n\t\timage.src = src;\r\n\t\tconst imgWindow = window.open(src);\r\n\t\timgWindow.document.write(image.outerHTML);\r\n\t};\r\n\t\r\n\tconst onFinish=()=>{\r\n\t\tsetDisableBtn(true)\t\r\n\t\tlet list = [];\r\n\t\tfileList.map(item=> list.push({image:item.originFileObj, view:item.thumbUrl}))\r\n\t\tdispatch({type: 'global/uploadFileSingle',  payload: list});\r\n\t}\r\n\t\r\n\tconst cancelFun=()=>{\r\n\t\tsetDisableBtn(false);\r\n\t\tprops.closeFun();\r\n\t}\r\n\t\r\n\tconst dummyUploadRequest = ({ file, onSuccess }) => {\r\n\t\tsetTimeout(() => {\r\n\t\t  onSuccess(\"ok\");\r\n\t\t}, 0);\r\n\t  };\r\n\r\n\tuseEffect(() => {\r\n\t\tlet unmounted = false;\r\n\t\tif(props.resetVal && props.resetVal.length===0){\r\n\t\t\tsetFileList([])\r\n\t\t}\r\n\t\treturn () => {\r\n  \t  unmounted = true;\r\n      }\r\n\t}, [props.resetVal]); \r\n\t\r\n\tuseEffect(() => {\r\n\t\tlet unmounted = false;\r\n\t\tlet upload = props.global.uploadsingle;\r\n\t\tif(!unmounted && 0 > count && (upload.files.length >0 || upload.status === \"done\")){\r\n\t\t  setCount(0);\r\n\t\t  setDisableBtn(false)\r\n\t\t  setFileList([])\r\n\t\t  props.returnImg({urls:upload.files, file: upload.file});\r\n\t\t}else if(!unmounted && 0 > count && upload.status !== \"done\"){\r\n\t\t  setDisableBtn(false)\r\n\t\t  setCount(0);\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tunmounted = true;\r\n\t\t}\r\n    },[props.global.uploadsingle])\r\n\t\r\n\t\r\n\treturn <Modal visible={props.visible} title=\"Upload Image's\" okText=\"Upload\" onCancel={cancelFun} onOk={onFinish} okButtonProps={{ disabled: disableBtn }}>\r\n      \r\n\t\t  <Upload\r\n\t\t\tcustomRequest={dummyUploadRequest}\r\n\t\t\tlistType=\"picture-card\"\r\n\t\t\tfileList={fileList}\r\n\t\t\tonChange={onChange}\r\n\t\t\tonPreview={onPreview}\r\n\t\t  >\r\n\t\t\t{fileList.length < (props.limit || 1) && '+ Upload'}\r\n\t\t  </Upload>\r\n\t\r\n        </Modal>\r\n\t\t\r\n}\r\n\r\n//export default CropImage;\r\nexport default connect(({global }) => ({\r\n  global: global,\r\n}))(CropImage);"]},"metadata":{},"sourceType":"module"}