{"ast":null,"code":"import { getUserList, createEmployee, updateEmployee, getUserDetail, editUsers, deleteUser } from '../services/api';\nimport { message } from 'antd';\nexport default {\n  namespace: 'users',\n  state: {\n    del: {\n      count: 0\n    },\n    add: {\n      count: 0\n    },\n    edit: {\n      count: 0\n    }\n  },\n  subscriptions: {\n    setup(_ref) {\n      let {\n        dispatch,\n        history\n      } = _ref;\n    }\n\n  },\n  effects: {\n    *addEmployee(_ref2, _ref3) {\n      let {\n        payload\n      } = _ref2;\n      let {\n        call,\n        put\n      } = _ref3;\n      let response = {};\n      response = yield call(createEmployee, payload);\n      return;\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      yield put({\n        type: 'add',\n        message: response.status\n      });\n    },\n\n    *editEmployee(_ref4, _ref5) {\n      let {\n        payload\n      } = _ref4;\n      let {\n        call,\n        put\n      } = _ref5;\n      const response = yield call(updateEmployee, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      if (response.status) {\n        message.success(response.msg || response.message || response.err, 5);\n      }\n\n      yield put({\n        type: 'edit',\n        ...response\n      });\n    },\n\n    *getList(_ref6, _ref7) {\n      let {\n        payload\n      } = _ref6;\n      let {\n        call,\n        put\n      } = _ref7;\n      const response = yield call(getUserList, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      yield put({\n        type: 'list',\n        ...response\n      });\n    },\n\n    *getDetail(_ref8, _ref9) {\n      let {\n        payload\n      } = _ref8;\n      let {\n        call,\n        put\n      } = _ref9;\n      const response = yield call(getUserDetail, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      yield put({\n        type: 'detail',\n        ...response\n      });\n    },\n\n    *editItem(_ref10, _ref11) {\n      let {\n        payload\n      } = _ref10;\n      let {\n        call,\n        put\n      } = _ref11;\n      const response = yield call(editUsers, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      if (response.status) {\n        message.success(response.msg || response.message || response.err, 5);\n      }\n\n      yield put({\n        type: 'edit',\n        ...response\n      });\n    },\n\n    *deleteItem(_ref12, _ref13) {\n      let {\n        payload\n      } = _ref12;\n      let {\n        call,\n        put\n      } = _ref13;\n      const response = yield call(deleteUser, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      if (response.status) {\n        message.success(\"User Deleted Successfully!\", 5);\n      }\n\n      yield put({\n        type: 'del',\n        ...response\n      });\n    },\n\n    *clearAction(_ref14, _ref15) {\n      let {\n        payload\n      } = _ref14;\n      let {\n        call,\n        put\n      } = _ref15;\n      yield put({\n        type: 'clear'\n      });\n    }\n\n  },\n  reducers: {\n    list(state, action) {\n      return { ...state,\n        list: action\n      };\n    },\n\n    detail(state, action) {\n      return { ...state,\n        detail: action\n      };\n    },\n\n    edit(state, action) {\n      action.count = state.edit.count + 1;\n      return { ...state,\n        edit: action\n      };\n    },\n\n    del(state, action) {\n      action.count = state.del.count + 1;\n      return { ...state,\n        del: action\n      };\n    },\n\n    clear(state, action) {\n      return { ...state,\n        edit: {\n          count: 0\n        },\n        del: {\n          count: 0\n        }\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["/var/www/html/project/vivaquad/admin-vivaquad/src/models/users.js"],"names":["getUserList","createEmployee","updateEmployee","getUserDetail","editUsers","deleteUser","message","namespace","state","del","count","add","edit","subscriptions","setup","dispatch","history","effects","addEmployee","payload","call","put","response","status","error","msg","err","type","editEmployee","success","getList","getDetail","editItem","deleteItem","clearAction","reducers","list","action","detail","clear"],"mappings":"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","sourcesContent":[" import {getUserList,createEmployee, updateEmployee,getUserDetail, editUsers, deleteUser} from '../services/api'\r\nimport {message} from 'antd'; \r\nexport default {\r\n  namespace: 'users',\r\n\r\n  state: {\r\n\tdel:{count:0},\r\n\tadd:{count:0},\r\n\tedit:{count:0}\r\n\t}, \r\n\r\n  subscriptions: {\r\n    setup({ dispatch, history }) { \r\n    },\r\n  },\r\n\r\n  effects: { \r\n    *addEmployee({ payload }, {call,put}) {\r\n      let response = {};\r\n      response = yield call(createEmployee,payload); \r\n    return\r\n      if(!response.status) {message.error(response.msg || response.message || response.err, 5);}\r\n\t    yield put({ type: 'add', message: response.status });\r\n    },\r\n\r\n    *editEmployee({ payload }, { call, put }) {\r\n      const response = yield call(updateEmployee, payload); \r\n      if(!response.status) {message.error(response.msg || response.message || response.err, 5);}\r\n      if(response.status) {message.success(response.msg || response.message || response.err, 5);} \r\n      yield put({ type: 'edit', ...response});\r\n    },\r\n    *getList({ payload }, { call, put }) {\r\n      const response = yield call(getUserList, payload);\r\n      if(!response.status) {message.error(response.msg || response.message || response.err, 5);}\r\n\t  yield put({ type: 'list', ...response});\r\n    },\r\n    *getDetail({ payload }, { call, put }) {\r\n      const response = yield call(getUserDetail, payload); \r\n      if(!response.status) {message.error(response.msg || response.message || response.err, 5);}\r\n      yield put({ type: 'detail', ...response});\r\n    },\r\n    *editItem({ payload }, { call, put }) {\r\n      const response = yield call(editUsers, payload); \r\n      if(!response.status) {message.error(response.msg || response.message || response.err, 5);}\r\n      if(response.status) {message.success(response.msg || response.message || response.err, 5);} \r\n      yield put({ type: 'edit', ...response});\r\n    },\r\n    *deleteItem({ payload }, { call, put }) {\r\n      const response = yield call(deleteUser, payload); \r\n      if(!response.status) {message.error(response.msg || response.message || response.err, 5);}\r\n      if(response.status) {message.success(\"User Deleted Successfully!\", 5);} \r\n      yield put({ type: 'del', ...response});\r\n    },\r\n\t*clearAction({ payload }, { call, put }) {\r\n      yield put({ type: 'clear'});\r\n    },\r\n  },\r\n\r\n  reducers: {\r\n    list(state, action) {\r\n      return { ...state, list:action };\r\n    },\r\n    detail(state, action) {\r\n      return { ...state, detail:action };\r\n    },\r\n    edit(state, action) {\r\n\t\taction.count = state.edit.count+1;\r\n\t\treturn { ...state, edit:action };\r\n    },\r\n    del(state, action) {\r\n\t\taction.count = state.del.count+1;\r\n\t\treturn { ...state, del:action };\r\n    },\r\n\tclear(state, action) {\r\n\t\treturn { ...state, edit:{count:0}, del:{count:0}};\r\n    },\r\n  },\r\n};"]},"metadata":{},"sourceType":"module"}