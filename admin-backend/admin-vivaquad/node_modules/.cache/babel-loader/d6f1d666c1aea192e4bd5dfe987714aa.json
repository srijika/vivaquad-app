{"ast":null,"code":"import { login, Register, forgetpassword, resetPassword, resendOTPTOUser, varifyUser } from '../services/api';\nimport { message } from 'antd';\nexport default {\n  namespace: 'auth',\n  state: {\n    //data: null,\n    login: {\n      count: 0\n    },\n    forgot: {\n      count: 0\n    },\n    reg: {\n      count: 0\n    },\n    alrdreg: {\n      count: 0\n    },\n    varify: {}\n  },\n  subscriptions: {\n    setup(_ref) {\n      let {\n        dispatch,\n        history\n      } = _ref;\n    }\n\n  },\n  effects: {\n    *varifyOtp(_ref2, _ref3) {\n      let {\n        payload\n      } = _ref2;\n      let {\n        call,\n        put\n      } = _ref3;\n      const response = yield call(varifyUser, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      } else {\n        yield put({\n          type: 'varifySuccess',\n          ...response\n        });\n      }\n    },\n\n    *resendOtp(_ref4, _ref5) {\n      let {\n        payload\n      } = _ref4;\n      let {\n        call,\n        put\n      } = _ref5;\n      const response = yield call(resendOTPTOUser, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      } else {\n        if (response.status) {\n          message.success(response.msg || response.message || response.err, 5);\n        }\n      }\n    },\n\n    *login(_ref6, _ref7) {\n      let {\n        payload\n      } = _ref6;\n      let {\n        call,\n        put\n      } = _ref7;\n      const response = yield call(login, payload);\n\n      if (!response.status) {\n        if (response.msg == \"Your account is not verified\" || response.message == \"Your account is not verified\") {\n          localStorage.setItem(\"flow\", 'sin');\n          localStorage.setItem('user_email', payload.username);\n          localStorage.setItem(\"LoginCred\", JSON.stringify(payload));\n          yield put({\n            type: 'varify',\n            ...response\n          });\n        } else {\n          message.error(response.msg || response.message || response.err, 5);\n        }\n      }\n\n      if (response.status) {\n        let hostname = window.location.hostname;\n        let activeRole = 'ADMIN';\n\n        if (window.location.hostname === 'localhost') {\n          let role = response.user.role;\n\n          if (role !== \"REGULAR\" && role !== \"GUEST\") //For localhost \n            {\n              localStorage.removeItem('flow');\n              localStorage.removeItem('LoginCred');\n              localStorage.setItem('token', response.accessToken);\n              localStorage.setItem('role', role);\n              localStorage.setItem('user', JSON.stringify(response.user));\n              localStorage.setItem('userId', response.user._id);\n              localStorage.setItem('isEmailVerified', response.user_detail.isEmailVerified ? response.user_detail.isEmailVerified === true ? 'true' : 'false' : 'false');\n              yield put({\n                type: 'save',\n                ...response\n              });\n            } else {\n            message.error(\"You are not authorized to Login...!\", 5);\n          }\n        } else {\n          let role = response.user.role;\n\n          if (role === activeRole) //For localhost \n            {\n              localStorage.removeItem('flow');\n              localStorage.removeItem('LoginCred');\n              localStorage.setItem('token', response.accessToken);\n              localStorage.setItem('role', role);\n              localStorage.setItem('user', JSON.stringify(response.user));\n              localStorage.setItem('userId', response.user._id);\n              localStorage.setItem('isMobileVerified', response.user.isMobileVerified ? response.user.isMobileVerified === true ? 'true' : 'false' : 'false');\n              localStorage.setItem('isEmailVerified', response.user.isEmailVerified ? response.user.isEmailVerified === true ? 'true' : 'false' : 'false');\n              yield put({\n                type: 'save',\n                ...response\n              });\n            } else {\n            message.error(\"You are not authorized to Login...!\", 5);\n          }\n        }\n      }\n    },\n\n    *forgotFun(_ref8, _ref9) {\n      let {\n        payload\n      } = _ref8;\n      let {\n        call,\n        put\n      } = _ref9;\n      const response = yield call(forgetpassword, payload);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || response.err, 5);\n      }\n\n      if (response.status) {\n        message.success(response.msg || response.message || response.err, 5);\n      }\n\n      localStorage.setItem(\"flow\", 'forgot');\n      localStorage.setItem('user_email', payload.username);\n      yield put({\n        type: 'forgot',\n        ...response\n      });\n    },\n\n    *resetPassword(_ref10, _ref11) {\n      let {\n        payload\n      } = _ref10;\n      let {\n        call,\n        put\n      } = _ref11;\n      const response = yield call(resetPassword, payload);\n      console.log(response);\n\n      if (!response.status) {\n        message.error(response.msg || response.message || \"Something Went to wrong...Please Try Again!\", 5);\n      } else {\n        message.success(response.msg || response.message || \"Password Successfully Changed... Login again!\", 5);\n        yield put({\n          type: 'resetPasswordSuccess',\n          ...response\n        });\n      }\n    },\n\n    *register(_ref12, _ref13) {\n      let {\n        payload\n      } = _ref12;\n      let {\n        call,\n        put\n      } = _ref13;\n      const response = yield call(Register, payload);\n\n      if (!response.status) {\n        if (response.msg == \"This Email is already registered\" || response.message == \"This Email is already registered\") {\n          message.success(\"Your email is already register in Vivaquad so login with your email & password..!\", 5);\n          yield put({\n            type: 'alrdreg',\n            ...response\n          });\n        } else if (response.msg == \"This Mobile No is already registered\" || response.message == \"This Mobile No is already registered\") {\n          message.success(\"Your mobile number is already register in Vivaquad so login with your mobile number & password..!\", 5);\n          yield put({\n            type: 'alrdreg',\n            ...response\n          });\n        } else {\n          message.error(response.msg || response.message || response.err, 5);\n        }\n      } else {\n        if (response.status) {}\n\n        yield put({\n          type: 'reg',\n          ...response\n        });\n      }\n    },\n\n    *logoutApp(_ref14, _ref15) {\n      let {\n        _\n      } = _ref14;\n      let {\n        call,\n        put\n      } = _ref15;\n      localStorage.removeItem('token');\n      localStorage.removeItem('role');\n      localStorage.removeItem('user');\n      yield put({\n        type: 'logout'\n      });\n    }\n\n  },\n  reducers: {\n    otpSendSuccess(state, action) {\n      return { ...state,\n        varify: { ...action\n        },\n        login: {\n          count: 0\n        }\n      };\n    },\n\n    varifySuccess(state, action) {\n      return { ...state,\n        varify: { ...action\n        },\n        login: {\n          count: 0\n        }\n      };\n    },\n\n    save(state, action) {\n      action.count = state.login.count + 1;\n      return { ...state,\n        login: action,\n        varify: {}\n      };\n    },\n\n    varify(state, action) {\n      return { ...state,\n        login: 'varify',\n        varify: {}\n      };\n    },\n\n    forgot(state, action) {\n      action.count = state.forgot.count + 1;\n      return { ...state,\n        forgot: action\n      };\n    },\n\n    resetPasswordSuccess(state, action) {\n      return { ...state,\n        resetPassword: { ...action\n        },\n        forgot: {}\n      };\n    },\n\n    resetPasswordSuccessDone(state, action) {\n      return { ...state,\n        resetPassword: {}\n      };\n    },\n\n    registerSuccess(state, action) {\n      action.count = 0;\n      return { ...state,\n        reg: {\n          count: 0\n        }\n      };\n    },\n\n    alrdregisterSuccess(state, action) {\n      return { ...state,\n        varify: {},\n        login: {\n          count: 0\n        }\n      };\n    },\n\n    verifyBackNuttunSuccess(state, action) {\n      return { ...state,\n        varify: {},\n        login: {\n          count: 0\n        }\n      };\n    },\n\n    verotpSuccess(state, action) {\n      action.count = 0;\n      return { ...state,\n        alrdreg: {\n          count: 0\n        }\n      };\n    },\n\n    alrdreg(state, action) {\n      action.count = state.alrdreg.count + 1;\n      return { ...state,\n        alrdreg: {\n          action\n        }\n      };\n    },\n\n    reg(state, action) {\n      action.count = state.reg.count + 1;\n      return { ...state,\n        reg: {\n          action\n        }\n      };\n    },\n\n    logout(state) {\n      return { ...state,\n        login: {\n          count: 0\n        },\n        reg: {\n          count: 0\n        }\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["/var/www/html/project/vivaquad/admin-vivaquad/src/models/auth.js"],"names":["login","Register","forgetpassword","resetPassword","resendOTPTOUser","varifyUser","message","namespace","state","count","forgot","reg","alrdreg","varify","subscriptions","setup","dispatch","history","effects","varifyOtp","payload","call","put","response","status","error","msg","err","type","resendOtp","success","localStorage","setItem","username","JSON","stringify","hostname","window","location","activeRole","role","user","removeItem","accessToken","_id","user_detail","isEmailVerified","isMobileVerified","forgotFun","console","log","register","logoutApp","_","reducers","otpSendSuccess","action","varifySuccess","save","resetPasswordSuccess","resetPasswordSuccessDone","registerSuccess","alrdregisterSuccess","verifyBackNuttunSuccess","verotpSuccess","logout"],"mappings":"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","sourcesContent":["import { login,  Register, forgetpassword, resetPassword, resendOTPTOUser, varifyUser } from '../services/api'\r\nimport { message } from 'antd';\r\nexport default {\r\n  namespace: 'auth',\r\n\r\n  state: {\r\n    //data: null,\r\n    login: { count: 0 },\r\n    forgot: { count: 0 },\r\n    reg: { count: 0 },\r\n    alrdreg: { count: 0 },\r\n    varify: {}\r\n  },\r\n\r\n  subscriptions: {\r\n    setup({ dispatch, history }) {\r\n    },\r\n  },\r\n\r\n  effects: {\r\n    *varifyOtp({ payload }, { call, put }) {\r\n      const response = yield call(varifyUser, payload);\r\n      if (!response.status) {\r\n        message.error(response.msg || response.message || response.err, 5);\r\n      } else {\r\n        yield put({ type: 'varifySuccess', ...response });\r\n      }\r\n    },\r\n    *resendOtp({ payload }, { call, put }) {\r\n      const response = yield call(resendOTPTOUser, payload);\r\n      if (!response.status) {\r\n        message.error(response.msg || response.message || response.err, 5);\r\n      } else {\r\n        if (response.status) { message.success(response.msg || response.message || response.err, 5); }\r\n      }\r\n    },\r\n    *login({ payload }, { call, put }) {\r\n      const response = yield call(login, payload);\r\n\r\n      if (!response.status) {\r\n        if (response.msg == \"Your account is not verified\" || response.message == \"Your account is not verified\") {\r\n          localStorage.setItem(\"flow\", 'sin');\r\n          localStorage.setItem('user_email', payload.username);\r\n          localStorage.setItem(\"LoginCred\", JSON.stringify(payload));\r\n          yield put({ type: 'varify', ...response });\r\n        } else {\r\n          message.error(response.msg || response.message || response.err, 5);\r\n        }\r\n      }\r\n      if (response.status) {\r\n        let hostname = window.location.hostname;\r\n\r\n        let activeRole = 'ADMIN';\r\n           if(window.location.hostname === 'localhost') {\r\n            let role = response.user.role;\r\n            if (role !== \"REGULAR\" && role !== \"GUEST\") //For localhost \r\n            {\r\n              localStorage.removeItem('flow');\r\n              localStorage.removeItem('LoginCred')\r\n              localStorage.setItem('token', response.accessToken);\r\n              localStorage.setItem('role', role);\r\n              localStorage.setItem('user', JSON.stringify(response.user));\r\n              localStorage.setItem('userId', response.user._id);\r\n  \r\n              localStorage.setItem('isEmailVerified', response.user_detail.isEmailVerified ? response.user_detail.isEmailVerified === true ? 'true' : 'false' : 'false');\r\n              yield put({ type: 'save', ...response });\r\n            } else {\r\n              message.error(\"You are not authorized to Login...!\", 5);\r\n            }\r\n          }else {\r\n            let role = response.user.role;\r\n            if (role === activeRole) //For localhost \r\n            { \r\n              localStorage.removeItem('flow');\r\n              localStorage.removeItem('LoginCred')\r\n              localStorage.setItem('token', response.accessToken);\r\n              localStorage.setItem('role', role);\r\n              localStorage.setItem('user', JSON.stringify(response.user));\r\n              localStorage.setItem('userId', response.user._id);\r\n              localStorage.setItem('isMobileVerified', response.user.isMobileVerified ? response.user.isMobileVerified === true ? 'true' : 'false' : 'false');\r\n              localStorage.setItem('isEmailVerified', response.user.isEmailVerified ? response.user.isEmailVerified === true ? 'true' : 'false' : 'false');\r\n              yield put({ type: 'save', ...response });\r\n            } else {\r\n              message.error(\"You are not authorized to Login...!\", 5);\r\n            }\r\n          }\r\n        }\r\n    },\r\n    *forgotFun({ payload }, { call, put }) {\r\n      const response = yield call(forgetpassword, payload);\r\n      if (!response.status) { message.error(response.msg || response.message || response.err, 5); }\r\n      if (response.status) { message.success(response.msg || response.message || response.err, 5); }\r\n      localStorage.setItem(\"flow\", 'forgot');\r\n      localStorage.setItem('user_email', payload.username);\r\n      yield put({ type: 'forgot', ...response });\r\n    },\r\n    *resetPassword({ payload }, { call, put }) {\r\n      const response = yield call(resetPassword, payload);\r\n      console.log(response)\r\n      if (!response.status) {\r\n        message.error(response.msg || response.message || \"Something Went to wrong...Please Try Again!\", 5);\r\n      } else {\r\n        message.success(response.msg || response.message || \"Password Successfully Changed... Login again!\", 5);\r\n        yield put({ type: 'resetPasswordSuccess', ...response });\r\n      }\r\n\r\n    },\r\n    *register({ payload }, { call, put }) {\r\n      const response = yield call(Register, payload);\r\n      if (!response.status) {\r\n        if (response.msg == \"This Email is already registered\" || response.message == \"This Email is already registered\") {\r\n          message.success(\"Your email is already register in Vivaquad so login with your email & password..!\", 5);\r\n          yield put({ type: 'alrdreg', ...response });\r\n        } else if (response.msg == \"This Mobile No is already registered\" || response.message == \"This Mobile No is already registered\") {\r\n          message.success(\"Your mobile number is already register in Vivaquad so login with your mobile number & password..!\", 5);\r\n          yield put({ type: 'alrdreg', ...response });\r\n        } else {\r\n          message.error(response.msg || response.message || response.err, 5);\r\n        }\r\n      } else {\r\n\r\n\r\n        if (response.status) { \r\n\r\n         }\r\n\r\n       \r\n        yield put({ type: 'reg', ...response });\r\n      }\r\n\r\n    },\r\n    *logoutApp({ _ }, { call, put }) {\r\n      localStorage.removeItem('token')\r\n      localStorage.removeItem('role')\r\n      localStorage.removeItem('user')\r\n      yield put({ type: 'logout' });\r\n    },\r\n  },\r\n\r\n  reducers: {\r\n    otpSendSuccess(state, action) {\r\n      return {\r\n        ...state,\r\n        varify: { ...action }, login: { count: 0 }\r\n      };\r\n    },\r\n    varifySuccess(state, action) {\r\n      return {\r\n        ...state,\r\n        varify: { ...action }, login: { count: 0 }\r\n      };\r\n    },\r\n    save(state, action) {\r\n      action.count = state.login.count + 1;\r\n      return {\r\n        ...state,\r\n        login: action, varify: {}\r\n      };\r\n    },\r\n    varify(state, action) {\r\n      return {\r\n        ...state,\r\n        login: 'varify', varify: {}\r\n      };\r\n    },\r\n    forgot(state, action) {\r\n      action.count = state.forgot.count + 1;\r\n      return { ...state, forgot: action };\r\n    },\r\n    resetPasswordSuccess(state, action) {\r\n      return {\r\n        ...state,\r\n        resetPassword: { ...action }, forgot: {}\r\n      };\r\n    },\r\n    resetPasswordSuccessDone(state, action) {\r\n      return { ...state, resetPassword: {} };\r\n    },\r\n    registerSuccess(state, action) {\r\n      action.count = 0;\r\n      return { ...state, reg: { count: 0 } };\r\n    },\r\n    alrdregisterSuccess(state, action) {\r\n      return { ...state, varify: {}, login: { count: 0 } };\r\n    },\r\n    verifyBackNuttunSuccess(state, action) {\r\n      return { ...state, varify: {}, login: { count: 0 } };\r\n    },\r\n    verotpSuccess(state, action) {\r\n      action.count = 0;\r\n      return { ...state, alrdreg: { count: 0 } };\r\n    },\r\n    alrdreg(state, action) {\r\n      action.count = state.alrdreg.count + 1;\r\n      return {\r\n        ...state,\r\n        alrdreg: { action }\r\n      };\r\n    },\r\n    reg(state, action) {\r\n      action.count = state.reg.count + 1;\r\n      return {\r\n        ...state,\r\n        reg: { action }\r\n      };\r\n    },\r\n    logout(state) {\r\n      return { ...state, login: { count: 0 }, reg: { count: 0 } };\r\n    },\r\n  },\r\n};"]},"metadata":{},"sourceType":"module"}