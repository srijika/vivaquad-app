{"ast":null,"code":"import { uploadFiles } from '../services/api';\nimport { message } from 'antd';\nexport default {\n  namespace: 'global',\n  state: {\n    toggleval: false,\n    upload: {\n      count: 0\n    },\n    uploadsingle: {\n      count: 0\n    }\n  },\n  subscriptions: {\n    setup(_ref) {\n      let {\n        dispatch,\n        history\n      } = _ref;\n    }\n\n  },\n  effects: {\n    *uploadFile(_ref2, _ref3) {\n      let {\n        payload\n      } = _ref2;\n      let {\n        call,\n        put\n      } = _ref3;\n      console.log('file', payload);\n      const response = {};\n      const fileList = payload.map(item => item.image);\n      yield put({\n        type: 'upload',\n        ...{ ...response,\n          file: fileList\n        }\n      });\n    },\n\n    *uploadFileSingle(_ref4, _ref5) {\n      let {\n        payload\n      } = _ref4;\n      let {\n        call,\n        put\n      } = _ref5;\n      const response = {};\n      yield put({\n        type: 'uploadsingle',\n        ...{ ...response,\n          file: payload[0].image\n        }\n      });\n    },\n\n    *clearAction(_ref6, _ref7) {\n      let {\n        payload\n      } = _ref6;\n      let {\n        call,\n        put\n      } = _ref7;\n      yield put({\n        type: 'clear'\n      });\n    }\n\n  },\n  reducers: {\n    toggle(val) {\n      console.log(val);\n      return {\n        toggleval: !val.toggleval\n      };\n    },\n\n    minus(count) {\n      return count - 1;\n    },\n\n    upload(state, action) {\n      action.count = state.upload.count + 1;\n      return { ...state,\n        upload: action\n      };\n    },\n\n    uploadsingle(state, action) {\n      action.count = state.uploadsingle.count + 1;\n      return { ...state,\n        uploadsingle: action\n      };\n    },\n\n    clear(state, action) {\n      return { ...state,\n        upload: {\n          count: 0\n        },\n        uploadsingle: {\n          count: 0\n        }\n      };\n    }\n\n  }\n};","map":{"version":3,"sources":["/var/www/html/project/vivaquad/admin-vivaquad/src/models/global.js"],"names":["uploadFiles","message","namespace","state","toggleval","upload","count","uploadsingle","subscriptions","setup","dispatch","history","effects","uploadFile","payload","call","put","console","log","response","fileList","map","item","image","type","file","uploadFileSingle","clearAction","reducers","toggle","val","minus","action","clear"],"mappings":"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","sourcesContent":["import {uploadFiles} from '../services/api'\r\nimport {message} from 'antd'; \r\nexport default {\r\n  namespace: 'global',\r\n  state:{\r\n\t  toggleval:false,\r\n\t  upload:{count:0},\r\n\t  uploadsingle:{count:0}\r\n\t },\r\n  subscriptions: {\r\n    setup({ dispatch, history }) { \r\n    },\r\n  },\r\n  effects: {\r\n\t*uploadFile({ payload }, { call, put }) {\r\n\t\tconsole.log('file', payload)\r\n\t\t  const response = {}; \r\n      const fileList = payload.map( (item) =>  item.image ); \r\n      yield put({ type: 'upload', ...{...response, file: fileList}});\r\n    },\r\n\t*uploadFileSingle({ payload }, { call, put }) {\r\n\t\t    const response = {};\r\n        yield put({ type: 'uploadsingle', ...{...response, file: payload[0].image }});\r\n    },\r\n\t*clearAction({ payload }, { call, put }) {\r\n      yield put({ type: 'clear',});\r\n    },\r\n  },\r\n  reducers: {\r\n    toggle(val) { \r\n      console.log(val);\r\n      return {toggleval:!val.toggleval};\r\n    },\r\n    minus(count) { return count - 1 },\r\n\t\r\n\tupload(state, action) {\r\n\t\taction.count = state.upload.count+1;\r\n\t\treturn { ...state, upload:action };\r\n    },\r\n\tuploadsingle(state, action) {\r\n\t\taction.count = state.uploadsingle.count+1;\r\n\t\treturn { ...state, uploadsingle:action };\r\n    },\r\n\tclear(state, action) {\r\n\t\treturn { ...state, upload:{count:0}, uploadsingle:{count:0} };\r\n    },\r\n\t\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}