{"ast":null,"code":"var _jsxFileName = \"/var/www/html/project/vivaquad/admin-vivaquad/src/components/sharing/change-password/index.jsx\";\nimport { Alert, Form, Input, Button, Typography, Popover, Tooltip } from 'antd';\nimport React, { useEffect, useState, Fragment, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'dva'; //import Apploader from './../../components/loader/loader'\n//import ErrorAlert from '@/components/CommonComp/AlertMessage';\n\nimport styles from './style.less';\nconst {\n  Text\n} = Typography;\n\nconst ChangePassword = props => {\n  const [form] = Form.useForm();\n  const [count, setCount] = useState(0);\n  const [fieldType, setFieldType] = useState(false);\n  const [error, setError] = useState(false);\n  const [charval, setCharval] = useState(false);\n  const [upperval, setUpperval] = useState(false);\n  const [lowerval, setLowerval] = useState(false);\n  const [numval, setNumval] = useState(false);\n  const [Scharval, setScharval] = useState(false);\n  const [TooltipShow, setTooltipShow] = useState(false);\n  const [confirm, setConfirm] = useState(false);\n  const [valid, setValid] = useState(false); //const fieldFocus = useRef();\n\n  const btnFocus = useRef();\n  const {\n    dispatch\n  } = props;\n\n  const skipFun = e => {\n    if (valid) setValid(false);\n    if (TooltipShow) setTooltipShow(false);\n    if (confirm) setConfirm(false);\n    form.resetFields();\n    props.skip();\n  };\n\n  const onFinish = values => {\n    console.log();\n    delete values[\"Cpassword\"];\n    if (valid) setValid(false);\n    if (TooltipShow) setTooltipShow(false);\n    if (confirm) setConfirm(false);\n    props.successCall(values);\n    console.log(valid);\n    console.log('working');\n  };\n\n  const checkPassword = value => {\n    //console.log('checkpassword', value)\n    var pass = value;\n    let special = /[^\\w\\s]/g;\n    let capital = /^(?=\\S*[A-Z])/g;\n    let number = /^(?=\\S*\\d)/g;\n    let small = /^(?=\\S*[a-z])/g;\n    let specChar = special.test(pass);\n\n    if (value !== undefined) {\n      let showtooltip = number.test(pass) && capital.test(pass) && small.test(pass) && specChar && value.length > 7 && value.length < 17;\n      setCharval(value.length > 7 && value.length < 17);\n      setUpperval(capital.test(pass));\n      setLowerval(small.test(pass));\n      setNumval(number.test(pass));\n      setScharval(specChar);\n\n      if (showtooltip || value === '') {\n        setTooltipShow(false);\n\n        if (value !== '') {\n          setValid(true);\n        }\n\n        return;\n      } else {\n        setTooltipShow(true);\n        setValid(false);\n        return Promise.reject('Please enter valid password!');\n      }\n    } else {\n      setValid(false);\n      return setTooltipShow(true);\n    } // {callback();}\n    //return Promise.reject('The two passwords that you entered do not match!');\n\n  };\n\n  useEffect(() => {\n    let unmounted = false; //fieldFocus.current.focus();\n\n    /*if(!unmounted &&  props.userLogin.login.count > 0){\r\n      //dispatch({ type: 'login/clearLogin'});\r\n    }*/\n\n    return () => {\n      unmounted = true;\n    };\n  }, [dispatch]);\n  const content = /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Password Requirements\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subcontent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: charval ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"8-16 Characters\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: upperval ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"1 Uppercase Letter\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: lowerval ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"1 Lowercase Letter\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: numval ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"1 Number\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: Scharval ? 'active' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"1 Special Character\")));\n  const suffixpass = valid ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-check\",\n    style: {\n      color: 'rgba(30, 202, 183, 1)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 30\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 108\n    }\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, error, /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    form: form,\n    name: \"resetpass\",\n    className: \"login-form\",\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, !props.hideOldPass && /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"oldPassword\",\n    label: \"CURRENT PASSWORD\",\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: 'password',\n    className: \"hasLeftPrefix\",\n    prefix: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-key\",\n      name: \"key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }),\n    maxLength: \"16\",\n    placeholder: \"Current Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"right\",\n    title: content,\n    trigger: 'focus',\n    overlayClassName: \"intooltip\",\n    visible: TooltipShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    label: \"NEW PASSWORD\",\n    rules: [{\n      required: true,\n      message: 'This field is required.'\n    }, {\n      validator: async (_, value) => await checkPassword(value)\n    }] //validateStatus={error ? \"error\": !TooltipShow?\"success\":'' }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: fieldType ? 'text' : 'password',\n    className: (valid ? 'hasEyeIcon' : '') + ' hasLeftPrefix',\n    prefix: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-key\",\n      name: \"key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 124\n      }\n    }),\n    placeholder: \"Password\" //autoFocus={true}\n    //ref={fieldFocus}\n    ,\n    maxLength: \"16\",\n    suffix: suffixpass,\n    onFocus: () => setTooltipShow(true),\n    onBlur: () => setTooltipShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"Cpassword\",\n    label: \"CONFIRM PASSWORD\",\n    dependencies: ['password'] //validateStatus={error ? \"error\":''}\n    ,\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, _ref => {\n      let {\n        getFieldValue\n      } = _ref;\n      return {\n        validator(rule, value) {\n          if (!value) {\n            return Promise.reject('');\n          }\n\n          if (value && getFieldValue('password') === value) {\n            if (getFieldValue('password') === value) {\n              setConfirm(true); //btnFocus.current.focus();\n            }\n\n            return Promise.resolve();\n          }\n\n          setConfirm(false);\n          return Promise.reject('Passwords not match!');\n        }\n\n      };\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: fieldType ? 'text' : 'password',\n    className: \"hasLeftPrefix hasEyeIcon\",\n    prefix: /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-key\",\n      name: \"key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }),\n    maxLength: \"16\",\n    placeholder: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      textAlign: 'right',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, props.cancelBtn && /*#__PURE__*/React.createElement(Button, {\n    onClick: skipFun,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, \"Cancel\"), \"\\xA0\", /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-w25\",\n    ref: btnFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, props.buttonText ? props.buttonText : \"Set Password\"))));\n};\n\nexport default connect(_ref2 => {\n  let {\n    loading\n  } = _ref2;\n  return {};\n})(ChangePassword);","map":{"version":3,"sources":["/var/www/html/project/vivaquad/admin-vivaquad/src/components/sharing/change-password/index.jsx"],"names":["Alert","Form","Input","Button","Typography","Popover","Tooltip","React","useEffect","useState","Fragment","useRef","Link","connect","styles","Text","ChangePassword","props","form","useForm","count","setCount","fieldType","setFieldType","error","setError","charval","setCharval","upperval","setUpperval","lowerval","setLowerval","numval","setNumval","Scharval","setScharval","TooltipShow","setTooltipShow","confirm","setConfirm","valid","setValid","btnFocus","dispatch","skipFun","e","resetFields","skip","onFinish","values","console","log","successCall","checkPassword","value","pass","special","capital","number","small","specChar","test","undefined","showtooltip","length","Promise","reject","unmounted","content","suffixpass","color","hideOldPass","required","message","validator","_","getFieldValue","rule","resolve","textAlign","margin","cancelBtn","buttonText","loading"],"mappings":"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","sourcesContent":["import { Alert, Form, Input, Button, Typography, Popover, Tooltip } from 'antd';\r\nimport React, { useEffect, useState, Fragment, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'dva';\r\n//import Apploader from './../../components/loader/loader'\r\n//import ErrorAlert from '@/components/CommonComp/AlertMessage';\r\nimport styles from './style.less'\r\nconst { Text } = Typography;\r\n\r\nconst ChangePassword = props => {\r\n  const [form] = Form.useForm();\r\n  const [count, setCount] = useState(0);\r\n  const [fieldType, setFieldType] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [charval, setCharval] = useState(false);\r\n  const [upperval, setUpperval] = useState(false);\r\n  const [lowerval, setLowerval] = useState(false);\r\n  const [numval, setNumval] = useState(false);\r\n  const [Scharval, setScharval] = useState(false);\r\n  const [TooltipShow, setTooltipShow] = useState(false);\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [valid, setValid] = useState(false);\r\n  //const fieldFocus = useRef();\r\n  const btnFocus = useRef();\r\n  const { dispatch } = props;\r\n\r\n\r\n\r\n  const skipFun = (e) => {\r\n    if (valid) setValid(false);\r\n    if (TooltipShow) setTooltipShow(false);\r\n    if (confirm) setConfirm(false);\r\n    form.resetFields();\r\n    props.skip();\r\n  }\r\n\r\n  const onFinish = values => {\r\n\r\n    console.log();\r\n    delete values[\"Cpassword\"];\r\n    if (valid) setValid(false);\r\n    if (TooltipShow) setTooltipShow(false);\r\n    if (confirm) setConfirm(false);\r\n    props.successCall(values);\r\n    console.log(valid);\r\n    console.log('working');\r\n  };\r\n\r\n  const checkPassword = (value) => {\r\n    //console.log('checkpassword', value)\r\n\r\n    var pass = value;\r\n    let special = /[^\\w\\s]/g;\r\n    let capital = /^(?=\\S*[A-Z])/g;\r\n    let number = /^(?=\\S*\\d)/g;\r\n    let small = /^(?=\\S*[a-z])/g;\r\n    let specChar = special.test(pass);\r\n\r\n    if (value !== undefined) {\r\n      let showtooltip = number.test(pass) && capital.test(pass) && small.test(pass) && specChar && value.length > 7 && value.length < 17;\r\n\r\n      setCharval(value.length > 7 && value.length < 17);\r\n      setUpperval(capital.test(pass));\r\n      setLowerval(small.test(pass));\r\n      setNumval(number.test(pass));\r\n      setScharval(specChar)\r\n\r\n      if (showtooltip || value === '') {\r\n        setTooltipShow(false)\r\n        if (value !== '') { setValid(true) }\r\n        return;\r\n      } else {\r\n        setTooltipShow(true)\r\n        setValid(false)\r\n        return Promise.reject('Please enter valid password!');\r\n      }\r\n    } else {\r\n      setValid(false);\r\n      return setTooltipShow(true)\r\n    }\r\n\r\n    // {callback();}\r\n    //return Promise.reject('The two passwords that you entered do not match!');\r\n  }\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    //fieldFocus.current.focus();\r\n    /*if(!unmounted &&  props.userLogin.login.count > 0){\r\n      //dispatch({ type: 'login/clearLogin'});\r\n    }*/\r\n    return () => {\r\n      unmounted = true;\r\n    }\r\n  }, [dispatch])\r\n\r\n  const content = (\r\n    <Fragment>\r\n      <h4>Password Requirements</h4>\r\n      <div className=\"subcontent\">\r\n        <p className={charval ? 'active' : ''}>8-16 Characters</p>\r\n        <p className={upperval ? 'active' : ''}>1 Uppercase Letter</p>\r\n        <p className={lowerval ? 'active' : ''}>1 Lowercase Letter</p>\r\n        <p className={numval ? 'active' : ''}>1 Number</p>\r\n        <p className={Scharval ? 'active' : ''}>1 Special Character</p>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n  const suffixpass = valid ? <i className={\"far fa-check\"} style={{ color: 'rgba(30, 202, 183, 1)' }} /> : <i />;\r\n\r\n  return (<Fragment>\r\n    {error}\r\n    <Form layout=\"vertical\" form={form} name=\"resetpass\" className=\"login-form\" onFinish={onFinish} >\r\n      {!props.hideOldPass &&\r\n        <Form.Item name=\"oldPassword\" label=\"CURRENT PASSWORD\"\r\n          rules={[{ required: true, message: 'Please confirm your password!' },]}\r\n        >\r\n          <Input type={'password'} className=\"hasLeftPrefix\"\r\n            prefix={<i className=\"fas fa-key\" name=\"key\" />}\r\n            maxLength=\"16\"\r\n            placeholder=\"Current Password\" />\r\n        </Form.Item>\r\n      }\r\n\r\n      <Tooltip placement=\"right\" title={content} trigger={'focus'} overlayClassName=\"intooltip\" visible={TooltipShow}>\r\n        <Form.Item name=\"password\" label=\"NEW PASSWORD\"\r\n          rules={[{ required: true, message: 'This field is required.' },\r\n          {\r\n            validator: async (_, value) => await checkPassword(value)\r\n          }\r\n          ]}\r\n        //validateStatus={error ? \"error\": !TooltipShow?\"success\":'' }\r\n        >\r\n          <Input type={fieldType ? 'text' : 'password'} className={(valid ? 'hasEyeIcon' : '') + ' hasLeftPrefix'} prefix={<i className=\"fas fa-key\" name=\"key\" />} placeholder=\"Password\"\r\n            //autoFocus={true}\r\n            //ref={fieldFocus}\r\n            maxLength=\"16\"\r\n            suffix={suffixpass}\r\n            onFocus={() => setTooltipShow(true)}\r\n            onBlur={() => setTooltipShow(false)}\r\n          />\r\n        </Form.Item>\r\n      </Tooltip>\r\n\r\n      <Form.Item name=\"Cpassword\" label=\"CONFIRM PASSWORD\"\r\n        dependencies={['password']}\r\n        //validateStatus={error ? \"error\":''}\r\n        rules={[{ required: true, message: 'Please confirm your password!' },\r\n        ({ getFieldValue }) => ({\r\n          validator(rule, value) {\r\n            if (!value) {\r\n              return Promise.reject('');\r\n            }\r\n            if (value && getFieldValue('password') === value) {\r\n              if (getFieldValue('password') === value) {\r\n                setConfirm(true);\r\n                //btnFocus.current.focus();\r\n              }\r\n              return Promise.resolve();\r\n            }\r\n            setConfirm(false)\r\n            return Promise.reject('Passwords not match!');\r\n          },\r\n        }),\r\n        ]}\r\n      >\r\n        <Input type={fieldType ? 'text' : 'password'} className=\"hasLeftPrefix hasEyeIcon\"\r\n          prefix={<i className=\"fas fa-key\" name=\"key\" />}\r\n          maxLength=\"16\"\r\n          placeholder=\"Confirm Password\" />\r\n      </Form.Item>\r\n      <Form.Item style={{ textAlign: 'right', margin: 0 }} >\r\n        {props.cancelBtn && <Button onClick={skipFun}>\r\n          Cancel\r\n          {/*props.cancelText ? props.cancelText : \"Cancel\"*/}\r\n        </Button>}&nbsp;\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"btn-w25\"\r\n          ref={btnFocus} >\r\n          {props.buttonText ? props.buttonText : \"Set Password\"}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  </Fragment>\r\n  );\r\n};\r\n\r\nexport default connect(({ loading }) => ({\r\n\r\n}))(ChangePassword);\r\n"]},"metadata":{},"sourceType":"module"}