{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.buffers = exports.BUFFER_OVERFLOW = undefined;\n\nvar _utils = /*#__PURE__*/require(\"./utils\");\n\nvar BUFFER_OVERFLOW = exports.BUFFER_OVERFLOW = \"Channel's Buffer overflow!\";\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\nvar ON_OVERFLOW_EXPAND = 4;\nvar zeroBuffer = {\n  isEmpty: _utils.kTrue,\n  put: _utils.noop,\n  take: _utils.noop\n};\n\nfunction ringBuffer() {\n  var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  var overflowAction = arguments[1];\n  var arr = new Array(limit);\n  var length = 0;\n  var pushIndex = 0;\n  var popIndex = 0;\n\n  var push = function push(it) {\n    arr[pushIndex] = it;\n    pushIndex = (pushIndex + 1) % limit;\n    length++;\n  };\n\n  var take = function take() {\n    if (length != 0) {\n      var it = arr[popIndex];\n      arr[popIndex] = null;\n      length--;\n      popIndex = (popIndex + 1) % limit;\n      return it;\n    }\n  };\n\n  var flush = function flush() {\n    var items = [];\n\n    while (length) {\n      items.push(take());\n    }\n\n    return items;\n  };\n\n  return {\n    isEmpty: function isEmpty() {\n      return length == 0;\n    },\n    put: function put(it) {\n      if (length < limit) {\n        push(it);\n      } else {\n        var doubledLimit = void 0;\n\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n\n          case ON_OVERFLOW_SLIDE:\n            arr[pushIndex] = it;\n            pushIndex = (pushIndex + 1) % limit;\n            popIndex = pushIndex;\n            break;\n\n          case ON_OVERFLOW_EXPAND:\n            doubledLimit = 2 * limit;\n            arr = flush();\n            length = arr.length;\n            pushIndex = arr.length;\n            popIndex = 0;\n            arr.length = doubledLimit;\n            limit = doubledLimit;\n            push(it);\n            break;\n\n          default: // DROP\n\n        }\n      }\n    },\n    take: take,\n    flush: flush\n  };\n}\n\nvar buffers = exports.buffers = {\n  none: function none() {\n    return zeroBuffer;\n  },\n  fixed: function fixed(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_THROW);\n  },\n  dropping: function dropping(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_DROP);\n  },\n  sliding: function sliding(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_SLIDE);\n  },\n  expanding: function expanding(initialSize) {\n    return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);\n  }\n};","map":{"version":3,"sources":["/var/www/html/project/vivaquad/admin-vivaquad/node_modules/redux-saga/lib/internal/buffers.js"],"names":["exports","__esModule","buffers","BUFFER_OVERFLOW","undefined","_utils","require","ON_OVERFLOW_THROW","ON_OVERFLOW_DROP","ON_OVERFLOW_SLIDE","ON_OVERFLOW_EXPAND","zeroBuffer","isEmpty","kTrue","put","noop","take","ringBuffer","limit","arguments","length","overflowAction","arr","Array","pushIndex","popIndex","push","it","flush","items","doubledLimit","Error","none","fixed","dropping","sliding","expanding","initialSize"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.buffers = exports.BUFFER_OVERFLOW = undefined;\n\nvar _utils = /*#__PURE__*/require(\"./utils\");\n\nvar BUFFER_OVERFLOW = exports.BUFFER_OVERFLOW = \"Channel's Buffer overflow!\";\n\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\nvar ON_OVERFLOW_EXPAND = 4;\n\nvar zeroBuffer = { isEmpty: _utils.kTrue, put: _utils.noop, take: _utils.noop };\n\nfunction ringBuffer() {\n  var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  var overflowAction = arguments[1];\n\n  var arr = new Array(limit);\n  var length = 0;\n  var pushIndex = 0;\n  var popIndex = 0;\n\n  var push = function push(it) {\n    arr[pushIndex] = it;\n    pushIndex = (pushIndex + 1) % limit;\n    length++;\n  };\n\n  var take = function take() {\n    if (length != 0) {\n      var it = arr[popIndex];\n      arr[popIndex] = null;\n      length--;\n      popIndex = (popIndex + 1) % limit;\n      return it;\n    }\n  };\n\n  var flush = function flush() {\n    var items = [];\n    while (length) {\n      items.push(take());\n    }\n    return items;\n  };\n\n  return {\n    isEmpty: function isEmpty() {\n      return length == 0;\n    },\n    put: function put(it) {\n      if (length < limit) {\n        push(it);\n      } else {\n        var doubledLimit = void 0;\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n          case ON_OVERFLOW_SLIDE:\n            arr[pushIndex] = it;\n            pushIndex = (pushIndex + 1) % limit;\n            popIndex = pushIndex;\n            break;\n          case ON_OVERFLOW_EXPAND:\n            doubledLimit = 2 * limit;\n\n            arr = flush();\n\n            length = arr.length;\n            pushIndex = arr.length;\n            popIndex = 0;\n\n            arr.length = doubledLimit;\n            limit = doubledLimit;\n\n            push(it);\n            break;\n          default:\n          // DROP\n        }\n      }\n    },\n    take: take,\n    flush: flush\n  };\n}\n\nvar buffers = exports.buffers = {\n  none: function none() {\n    return zeroBuffer;\n  },\n  fixed: function fixed(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_THROW);\n  },\n  dropping: function dropping(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_DROP);\n  },\n  sliding: function sliding(limit) {\n    return ringBuffer(limit, ON_OVERFLOW_SLIDE);\n  },\n  expanding: function expanding(initialSize) {\n    return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);\n  }\n};"]},"metadata":{},"sourceType":"script"}