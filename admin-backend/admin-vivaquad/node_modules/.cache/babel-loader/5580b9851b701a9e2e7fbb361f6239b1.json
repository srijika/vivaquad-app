{"ast":null,"code":"var _jsxFileName = \"/var/www/html/project/vivaquad/admin-vivaquad/src/pages/employees/action/addEdit.jsx\";\n// import React, { useState,useEffect,useRef, Fragment} from 'react';\n// import {Row, Col, Empty, Modal, Card, Typography, Alert,Form,Input, Checkbox,Button,Switch, Upload, Dropdown, Menu, Select, notification, Transfer, DatePicker, Avatar, message, Descriptions } from 'antd';\n// import { LeftOutlined, LoadingOutlined, EditOutlined, CloseOutlined} from '@ant-design/icons';\n// import UploadImages from '../../../components/sharing/upload-images'\n// import CropImage from '../../../components/sharing/crop-image'\n// import TextEditor from '../../../components/sharing/text-editor'\n// import moment from 'moment';\n// import { connect } from 'dva';\n// import styles from './style.less';\n// const { Text } = Typography;\n// const { TextArea } = Input;\n// const timestemp = (new Date()).getTime();\n// const { RangePicker } = DatePicker;\n// const formItemLayout = { labelCol: {xs: { span: 24, },  sm: { span: 24, },}};\n// const dateFormat = 'YYYY/MM/DD';\n// const AddEditEmployee =props => {\n// \tconst [form] = Form.useForm();\n// \tconst { dispatch, category } = props;\n// \tconst [visible, setVisible] = useState(false);\n// \tconst [detail, setDetail] = useState({});\n// \tconst [itemId, setItemId] = useState()\n// \tconst [imageUrl, setImageUrl] = useState('');\n// \tconst [picModel, setPicModel] = useState(false);\n// \tconst [loading, setLoading] = useState(false);\n// \tconst [InquiryData, setInquiryData] = useState(''); \n// \tconst [Inquiry, setInquiry] = useState('');\n// \tconst [count, setCount] = useState(0)\n// \tconst [ecount, setECount] = useState(0)\n// \tconst [dcount, setDCount] = useState(0)\n// \tconst [btnDis, setBtnDis] = useState(false)\n// \tuseEffect(() => {\n// \t\tlet unmounted = false;\n// \t\twindow.scroll(0, 0);\n// \t\tif(props.match && props.match.params.id)\n// \t\t{\n// \t\t\tsetItemId(props.match.params.id)\n// \t\t\tDetailFun(props.match.params.id)\n// \t\t}else {\n// \t\t\tform.resetFields();\n// \t\t\tsetImageUrl('');\n// \t\t}\n// \t\treturn () => { unmounted = true; }\n//     },[dispatch])\n// \tconst DetailFun=(id)=>{\n// \t\tprops.dispatch({type: 'users/getDetail', payload: { _id: id, profile_id: id }});\n// \t}\n// \tconst onFinish= val=>{\n// \t\tconsole.log(props, val)\n// \t}\n// \tuseEffect(() => {\n// \t\tlet unmounted = false;\n// \t\t// Edit\n// \t\tlet edit = props.users.edit\n// \t\tif(!unmounted && edit.count > ecount && edit.status){\n// \t\t  setECount(edit.count);\n// \t\t  setBtnDis(false);\n// \t\t  setImageUrl('');\n// \t\t  cancelFun();\n// \t\t}else if(!unmounted && edit.count > ecount && !edit.status){\n// \t\t  setBtnDis(false);\n// \t\t  setECount(edit.count);\n// \t\t}\n// \t\t// detail\n// \t\tif(props.match && props.match.params.id)\n// \t\t{\n// \t\t\tlet detail = props.users.detail;\n// \t\t\tconsole.log(\"detail : \", detail);\n// \t\t\tif(!unmounted &&  detail && detail.status){\n// \t\t\t  setDCount(detail.count);\n// \t\t\t  let data = detail.profile;\n// \t\t\t\tsetDetail({\n// \t\t\t\t\t...data,\n// \t\t\t\t\tusername: data.username,\n// \t\t\t\t\temail: data.email,\n// \t\t\t\t\tmobile_number: data.mobile_number,\n// \t\t\t\t\tisEmailVerified: data.isEmailVerified,\n// \t\t\t\t\tisMobileVerified: data.isMobileVerified,\n// \t\t\t\t\troles: data.roles,\n// \t\t\t\t})\n// \t\t\t\tform.setFieldsValue({\n// \t\t\t\t  ['dob']: moment(new Date(data.dob), 'YYYY/MM/DD'),  ['email']: data.email, ['gender']: data.gender, ['name']: data.name, ['phone']: data.phone, ['photo']: data.photo\n// \t\t\t\t});\n// \t\t\t\tsetImageUrl(data.photo);\n// \t\t\t}else if(!unmounted && detail && !detail.status){\n// \t\t\t  setBtnDis(false);\n// \t\t\t  setDCount(detail.count);\n// \t\t\t}\n// \t\t}\n// \t\treturn () => {unmounted = true;\t}\n//     },[props.users])\n// \tconst cancelFun = ()=>{\n// \t\tform.resetFields();\n// \t\tsetImageUrl('');\n// \t\tprops.history.push('/employees');\n// \t}\n// \tconst getNewImage = val =>{\n// \t\tsetPicModel(false);\n// \t\tsetImageUrl(val[0])\n// \t\tform.setFieldsValue({images:val})\n// \t}\n// \tconst removeImgFun=()=>{\n// \t\tsetImageUrl('');\n// \t\tform.setFieldsValue({images:[]});\n// \t}\n// \tconst uploadButton = (\n//       <div>\n// \t\t{loading ? <LoadingOutlined /> : <i className=\"fad fa-camera-retro\" style={{color:\"#13c2c2\", fontSize: 57}} />}\n//       </div>\n//     );\n// return (\n// \t<Card title={<span><LeftOutlined onClick={()=> props.history.push('/employees')}/> User Details</span>} style={{marginTop:\"0\"}}>\n// \t\t{/* <div className={'uploaderImg'} >\n// \t\t\t\t\t\t\t\t{detail.avatar ? <img src={detail.avatar} alt=\"avatar\" style={{ maxWidth: '100%', maxHeight: '100%' }} className='pro_pic' /> : uploadButton}\n// \t\t\t\t\t\t\t</div> */}\n// \t\t<Descriptions size={'middle'} bordered>\n//           <Descriptions.Item label=\"Name\">{detail.username}</Descriptions.Item>\n// \t\t  <Descriptions.Item label=\"Email\">{detail.email}</Descriptions.Item>\n// \t\t  <Descriptions.Item label=\"Is Email Verified\">{detail.isEmailVerified ? 'true' : 'false'}</Descriptions.Item>\n// \t\t  <Descriptions.Item label=\"Role\">{detail.roles}</Descriptions.Item>\n//           <Descriptions.Item label=\"Profile Created On\">{moment(detail.create).format(dateFormat)}</Descriptions.Item>\n// \t\t  <Descriptions.Item label=\"DOB\">{detail.dob}</Descriptions.Item>\n// \t\t  <Descriptions.Item label=\"Mobile No\">{detail.mobile_number}</Descriptions.Item>\n//         </Descriptions>\n// \t</Card>\n// )};\n// export default connect(({ users, global, loading }) => ({\n//   users:users,\n//   global: global\n// }))(AddEditEmployee);\nimport React, { useState, useEffect, useRef, Fragment } from 'react';\nimport { Row, Col, Empty, Modal, Card, Typography, Alert, Form, Input, Checkbox, Button, Space, Upload, Dropdown, Menu, Select, notification, Transfer, DatePicker, Avatar, message, InputNumber } from 'antd';\nimport { LeftOutlined, LoadingOutlined, EditOutlined, CloseOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\nimport CropImage from '../../../components/sharing/crop-image';\nimport TextEditor from '../../../components/sharing/text-editor';\nimport moment from 'moment';\nimport { connect } from 'dva';\nimport MultiImageInput from 'react-multiple-image-input';\nconst {\n  Text\n} = Typography;\nconst {\n  TextArea\n} = Input;\nconst timestemp = new Date().getTime();\nconst {\n  RangePicker\n} = DatePicker;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 24\n    }\n  }\n};\nconst baseUrl = process.env.REACT_APP_ApiUrl;\n\nconst AddEditEmployee = props => {\n  const [form] = Form.useForm();\n  let idAdd = props.match.params.id === undefined ? true : false;\n  const {\n    dispatch,\n    newsCategory\n  } = props;\n  const [visible, setVisible] = useState(false);\n  const [galleryVisible, setVisibleGallery] = useState(false);\n  const [imagesList, setImagesList] = useState([]);\n  const [gallaryImagesList, setGallaryImagesList] = useState([]);\n  const [catlist, setCatlist] = useState([]);\n  const [subcatlist, setSubCatlist] = useState([]);\n  const [productFeatures, setProductFeatures] = useState([]);\n  const [detail, setDetail] = useState({});\n  const [itemId, setItemId] = useState();\n  const [imageUrl, setImageUrl] = useState('');\n  const [picModel, setPicModel] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [InquiryData, setInquiryData] = useState('');\n  let [Inquiry, setInquiry] = useState('');\n  const [count, setCount] = useState(0);\n  const [ecount, setECount] = useState(0);\n  const [dcount, setDCount] = useState(0);\n  const [btnDis, setBtnDis] = useState(false);\n  const [colorImages, setColorImages] = useState({});\n  const [manageStock, setManageStock] = useState(false);\n  const [scheduleSale, setScheduleSale] = useState(false);\n  const [galleryImageUriList, setGalleryImageUriList] = useState({});\n  const [isManageStockCbk, setManageStockCbk] = useState(false);\n  useEffect(() => {\n    let unmounted = false;\n    window.scroll(0, 0);\n    props.dispatch({\n      type: 'users/getDetail'\n    });\n\n    if (props.match.params.id) {\n      setItemId(props.match.params.id);\n      DetailFun(props.match.params.id);\n    } else {\n      form.resetFields();\n      setImageUrl('');\n      setImagesList([]);\n    }\n\n    return () => {\n      unmounted = true;\n    };\n  }, [dispatch]);\n  useEffect(() => {\n    let unmounted = false; // setCatlist(newsCategory.list ? newsCategory.list.result : [])\n\n    return () => {\n      unmounted = true;\n    };\n  }, [props.users]);\n\n  const DetailFun = id => {\n    props.dispatch({\n      type: 'users/getDetail',\n      payload: {\n        _id: id,\n        profile_id: id\n      }\n    });\n  };\n\n  const convertToFormData = val => {\n    const formData = new FormData();\n\n    for (const key in val) {\n      if (key == \"gallary_images\" && gallaryImagesList) {\n        formData.append(\"images\", gallaryImagesList[0]);\n      } else if (key == \"category_id\" && val.category_id) {\n        formData.append(key, val.category_id);\n      } else if (key == \"title\" && val.title) {\n        formData.append(key, val.title);\n      } else if (key == \"description\" && val.description) {\n        formData.append(key, val.description);\n      } else if (key == \"shortdesc\" && val.shortdesc) {\n        formData.append(key, val.shortdesc);\n      }\n    }\n\n    return formData;\n  };\n\n  const onFinish = val => {\n    val.gallary_images = [...gallaryImagesList];\n    const formData = convertToFormData(val);\n\n    if (props.match.params.id) {\n      formData.append('_id', props.match.params.id);\n      dispatch({\n        type: 'news/editNewsList',\n        payload: formData\n      });\n    } else {\n      dispatch({\n        type: 'news/addNewsList',\n        payload: formData\n      });\n    }\n  };\n\n  useEffect(() => {\n    let unmounted = false;\n    let add = props.news.add;\n\n    if (!unmounted && add.count > count && add.data && add.data.status) {\n      setCount(add.count);\n      setBtnDis(false);\n      setImageUrl('');\n      setImagesList([]);\n      cancelFun();\n      props.history.push('/news');\n    } else if (!unmounted && add.count > count && add.data && !add.data.status) {\n      setBtnDis(false);\n      setCount(add.count);\n    } // Edit\n\n\n    let edit = props.news.edit;\n    console.log('data::______________', edit);\n    console.log('data::______________', edit);\n    console.log('data::______________', !unmounted);\n    console.log('data::______________', edit.count > ecount);\n    console.log('data::______________', edit.status);\n\n    if (!unmounted && edit.count > ecount && edit.message) {\n      setECount(edit.count);\n      setBtnDis(false);\n      setImageUrl('');\n      setImagesList([]);\n      cancelFun();\n      props.history.push('/news');\n    } else if (!unmounted && edit.count > ecount && !edit.status) {\n      setBtnDis(false);\n      setECount(edit.count);\n    } // detail\n\n\n    if (props.match.params.id) {\n      let detail = props.news.detail;\n\n      if (!unmounted && detail && detail.status) {\n        setDCount(detail.count);\n        let data = detail.data[0];\n        setDetail(data);\n        form.setFieldsValue({\n          ['title']: data.title,\n          ['description']: data.description,\n          ['category_id']: data.category_id,\n          ['shortdesc']: data.shortdesc,\n          ['thumbnail']: data.thumbnail\n        }); // if ( data.stock_quanlity || data.allow_back_orders || data.low_stock_threshold) {\n        // \tsetManageStock(true);\n        // }\n\n        if (data.images && data.images.file) {\n          setImageUrl(data.images.file);\n          setImagesList([{\n            url: data.images.file\n          }]);\n        }\n\n        if (data.images && data.images.length > 0) {\n          setGalleryImageUriList(data.images.map(galImg => {\n            return process.env.REACT_APP_ApiUrl + '/' + galImg.file;\n          }));\n        }\n      } else if (!unmounted && detail && !detail.status) {\n        setBtnDis(false);\n        setDCount(detail.count);\n      }\n    }\n\n    return () => {\n      unmounted = true;\n    };\n  }, [props.news]);\n\n  const cancelFun = () => {\n    form.resetFields();\n    setImageUrl('');\n    setImagesList([]);\n    props.history.push('/news');\n  };\n\n  const getNewImage = val => {\n    console.log({\n      val\n    });\n    setPicModel(false);\n    setImageUrl(val.urls[0]);\n    form.setFieldsValue({\n      images: val.file\n    });\n  };\n\n  const removeImgFun = () => {\n    setImageUrl('');\n    form.setFieldsValue({\n      images: []\n    });\n  };\n\n  const productHandle = (val, field, index) => {\n    const product = productFeatures;\n    product.map((item, i) => {\n      if (index == i) item[field] = val;\n    });\n    setProductFeatures(product);\n  };\n\n  const uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 3\n    }\n  }, loading ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fad fa-camera-retro\",\n    style: {\n      color: \"#13c2c2\",\n      fontSize: 57\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 37\n    }\n  }));\n\n  const getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n\n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n\n    const isLt2M = file.size / 1024 / 1024 < 2;\n\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    return isJpgOrPng && isLt2M;\n  };\n\n  const handleChange = (info, index) => {\n    if (info.file.status === 'uploading') {\n      return;\n    }\n\n    if (info.file.status === 'done') {\n      getBase64(info.file.originFileObj, imageUrl => {\n        const indexName = 'colorProduct' + index;\n        setColorImages({ ...colorImages,\n          [indexName]: imageUrl\n        });\n      });\n      console.log('imageUrl', imageUrl);\n    }\n  };\n\n  const dataURLtoFile = (dataurl, filename) => {\n    var arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    return new File([u8arr], filename, {\n      type: mime\n    });\n  };\n\n  const onUploadGallery = data => {\n    const images = Object.values(data).map((image, i) => {\n      if (image.startsWith(process.env.REACT_APP_ApiUrl)) {\n        return image;\n      } else {\n        return dataURLtoFile(image, 'image_' + i);\n      }\n    });\n    setGalleryImageUriList(data);\n    const files = setGallaryImagesList([...images]);\n  };\n\n  const onRemoveGallery = id => {\n    setGallaryImagesList(gallaryImagesList.filter(img => img.id !== id));\n  };\n\n  const uploadButtonColor = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 3\n    }\n  }, loading ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 16\n    }\n  }) : /*#__PURE__*/React.createElement(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 5\n    }\n  }, \"Upload\"));\n  const crop = {\n    unit: '%',\n    aspect: 4 / 3,\n    width: '100'\n  };\n  return /*#__PURE__*/React.createElement(Card, {\n    title: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(LeftOutlined, {\n      onClick: () => props.history.push('/news'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 22\n      }\n    }), \" \", idAdd ? 'Add News' : 'Edit News'),\n    style: {\n      marginTop: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({}, formItemLayout, {\n    form: form,\n    name: \"loc_info\",\n    layout: \"vertical\",\n    onFinish: onFinish,\n    className: \"innerFields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    gutter: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 24,\n    md: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"thumbnail\",\n    label: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 42\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 48\n      }\n    }, \"*\"), \" Images\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MultiImageInput, {\n    images: galleryImageUriList,\n    setImages: onUploadGallery,\n    allowCrop: false,\n    theme: \"light\",\n    max: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    flex: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 24,\n    md: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"title\",\n    label: \"NEWS TITLE\",\n    rules: [{\n      required: true,\n      message: 'This field is required!'\n    }, {\n      max: 100,\n      message: 'NEWS TITLE must not be greater than 100 characters.'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"News Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 10\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: 24,\n    md: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"category_id\",\n    label: \"NEWS CATEGORY\",\n    rules: [{\n      required: true,\n      message: 'This field is required!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"News Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 10\n    }\n  }, catlist.map((item, index) => /*#__PURE__*/React.createElement(Select.Option, {\n    key: index,\n    value: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 41\n    }\n  }, item.category_name)))))))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 24,\n    md: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"shortdesc\",\n    label: \"SHORT DESCRIPTION\",\n    rules: [{\n      required: false,\n      message: 'This field is required!'\n    }, {\n      max: 200,\n      message: 'DESCRIPTION must not be greater than 200 characters.'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Short Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    sm: 24,\n    md: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"description\",\n    label: \"DESCRIPTION\",\n    rules: [{\n      required: true,\n      message: 'This field is required!'\n    }, {\n      max: 400,\n      message: 'DESCRIPTION must not be greater than 400 characters.'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"Description\",\n    rows: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 26\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Item, {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: cancelFun,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 6\n    }\n  }, \"Cancel\"), \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    disabled: btnDis,\n    className: \"btn-w25 btn-primary-light\",\n    onClick: () => form.submit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 5\n    }\n  }, \"Save\"))));\n};\n\nexport default connect(_ref => {\n  let {\n    users\n  } = _ref;\n  return {\n    users: users,\n    global: global\n  };\n})(AddEditEmployee);","map":{"version":3,"sources":["/var/www/html/project/vivaquad/admin-vivaquad/src/pages/employees/action/addEdit.jsx"],"names":["React","useState","useEffect","useRef","Fragment","Row","Col","Empty","Modal","Card","Typography","Alert","Form","Input","Checkbox","Button","Space","Upload","Dropdown","Menu","Select","notification","Transfer","DatePicker","Avatar","message","InputNumber","LeftOutlined","LoadingOutlined","EditOutlined","CloseOutlined","PlusOutlined","MinusCircleOutlined","CropImage","TextEditor","moment","connect","MultiImageInput","Text","TextArea","timestemp","Date","getTime","RangePicker","formItemLayout","labelCol","xs","span","sm","baseUrl","process","env","REACT_APP_ApiUrl","AddEditEmployee","props","form","useForm","idAdd","match","params","id","undefined","dispatch","newsCategory","visible","setVisible","galleryVisible","setVisibleGallery","imagesList","setImagesList","gallaryImagesList","setGallaryImagesList","catlist","setCatlist","subcatlist","setSubCatlist","productFeatures","setProductFeatures","detail","setDetail","itemId","setItemId","imageUrl","setImageUrl","picModel","setPicModel","loading","setLoading","InquiryData","setInquiryData","Inquiry","setInquiry","count","setCount","ecount","setECount","dcount","setDCount","btnDis","setBtnDis","colorImages","setColorImages","manageStock","setManageStock","scheduleSale","setScheduleSale","galleryImageUriList","setGalleryImageUriList","isManageStockCbk","setManageStockCbk","unmounted","window","scroll","type","DetailFun","resetFields","users","payload","_id","profile_id","convertToFormData","val","formData","FormData","key","append","category_id","title","description","shortdesc","onFinish","gallary_images","add","news","data","status","cancelFun","history","push","edit","console","log","setFieldsValue","thumbnail","images","file","url","length","map","galImg","getNewImage","urls","removeImgFun","productHandle","field","index","product","item","i","uploadButton","color","fontSize","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","isJpgOrPng","error","isLt2M","size","handleChange","info","originFileObj","indexName","dataURLtoFile","dataurl","filename","arr","split","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","onUploadGallery","Object","values","image","startsWith","files","onRemoveGallery","filter","uploadButtonColor","marginTop","crop","unit","aspect","width","required","max","category_name","submit","global"],"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","sourcesContent":["// import React, { useState,useEffect,useRef, Fragment} from 'react';\r\n// import {Row, Col, Empty, Modal, Card, Typography, Alert,Form,Input, Checkbox,Button,Switch, Upload, Dropdown, Menu, Select, notification, Transfer, DatePicker, Avatar, message, Descriptions } from 'antd';\r\n// import { LeftOutlined, LoadingOutlined, EditOutlined, CloseOutlined} from '@ant-design/icons';\r\n// import UploadImages from '../../../components/sharing/upload-images'\r\n// import CropImage from '../../../components/sharing/crop-image'\r\n// import TextEditor from '../../../components/sharing/text-editor'\r\n// import moment from 'moment';\r\n// import { connect } from 'dva';\r\n// import styles from './style.less';\r\n\r\n// const { Text } = Typography;\r\n// const { TextArea } = Input;\r\n// const timestemp = (new Date()).getTime();\r\n// const { RangePicker } = DatePicker;\r\n// const formItemLayout = { labelCol: {xs: { span: 24, },  sm: { span: 24, },}};\r\n// const dateFormat = 'YYYY/MM/DD';\r\n\r\n// const AddEditEmployee =props => {\r\n// \tconst [form] = Form.useForm();\r\n// \tconst { dispatch, category } = props;\r\n// \tconst [visible, setVisible] = useState(false);\r\n// \tconst [detail, setDetail] = useState({});\r\n// \tconst [itemId, setItemId] = useState()\r\n// \tconst [imageUrl, setImageUrl] = useState('');\r\n// \tconst [picModel, setPicModel] = useState(false);\r\n// \tconst [loading, setLoading] = useState(false);\r\n// \tconst [InquiryData, setInquiryData] = useState(''); \r\n// \tconst [Inquiry, setInquiry] = useState('');\r\n// \tconst [count, setCount] = useState(0)\r\n// \tconst [ecount, setECount] = useState(0)\r\n// \tconst [dcount, setDCount] = useState(0)\r\n// \tconst [btnDis, setBtnDis] = useState(false)\r\n\t\r\n// \tuseEffect(() => {\r\n// \t\tlet unmounted = false;\r\n// \t\twindow.scroll(0, 0);\r\n// \t\tif(props.match && props.match.params.id)\r\n// \t\t{\r\n// \t\t\tsetItemId(props.match.params.id)\r\n// \t\t\tDetailFun(props.match.params.id)\r\n// \t\t}else {\r\n// \t\t\tform.resetFields();\r\n// \t\t\tsetImageUrl('');\r\n// \t\t}\r\n// \t\treturn () => { unmounted = true; }\r\n//     },[dispatch])\r\n\t\r\n\t\r\n// \tconst DetailFun=(id)=>{\r\n// \t\tprops.dispatch({type: 'users/getDetail', payload: { _id: id, profile_id: id }});\r\n// \t}\r\n\t\r\n// \tconst onFinish= val=>{\r\n// \t\tconsole.log(props, val)\r\n// \t}\r\n\t\r\n// \tuseEffect(() => {\r\n// \t\tlet unmounted = false;\r\n// \t\t// Edit\r\n// \t\tlet edit = props.users.edit\r\n// \t\tif(!unmounted && edit.count > ecount && edit.status){\r\n// \t\t  setECount(edit.count);\r\n// \t\t  setBtnDis(false);\r\n// \t\t  setImageUrl('');\r\n// \t\t  cancelFun();\r\n// \t\t}else if(!unmounted && edit.count > ecount && !edit.status){\r\n// \t\t  setBtnDis(false);\r\n// \t\t  setECount(edit.count);\r\n// \t\t}\r\n\r\n\t\t\r\n\t\t\r\n// \t\t// detail\r\n// \t\tif(props.match && props.match.params.id)\r\n// \t\t{\r\n\t\t\t\r\n// \t\t\tlet detail = props.users.detail;\r\n// \t\t\tconsole.log(\"detail : \", detail);\r\n// \t\t\tif(!unmounted &&  detail && detail.status){\r\n// \t\t\t  setDCount(detail.count);\r\n// \t\t\t  let data = detail.profile;\r\n// \t\t\t\tsetDetail({\r\n// \t\t\t\t\t...data,\r\n// \t\t\t\t\tusername: data.username,\r\n// \t\t\t\t\temail: data.email,\r\n// \t\t\t\t\tmobile_number: data.mobile_number,\r\n// \t\t\t\t\tisEmailVerified: data.isEmailVerified,\r\n// \t\t\t\t\tisMobileVerified: data.isMobileVerified,\r\n// \t\t\t\t\troles: data.roles,\r\n// \t\t\t\t})\r\n// \t\t\t\tform.setFieldsValue({\r\n// \t\t\t\t  ['dob']: moment(new Date(data.dob), 'YYYY/MM/DD'),  ['email']: data.email, ['gender']: data.gender, ['name']: data.name, ['phone']: data.phone, ['photo']: data.photo\r\n// \t\t\t\t});\r\n// \t\t\t\tsetImageUrl(data.photo);\r\n// \t\t\t}else if(!unmounted && detail && !detail.status){\r\n// \t\t\t  setBtnDis(false);\r\n// \t\t\t  setDCount(detail.count);\r\n// \t\t\t}\r\n// \t\t}\r\n// \t\treturn () => {unmounted = true;\t}\r\n\r\n//     },[props.users])\r\n\t\r\n// \tconst cancelFun = ()=>{\r\n// \t\tform.resetFields();\r\n// \t\tsetImageUrl('');\r\n// \t\tprops.history.push('/employees');\r\n// \t}\r\n// \tconst getNewImage = val =>{\r\n// \t\tsetPicModel(false);\r\n// \t\tsetImageUrl(val[0])\r\n// \t\tform.setFieldsValue({images:val})\r\n// \t}\r\n// \tconst removeImgFun=()=>{\r\n// \t\tsetImageUrl('');\r\n// \t\tform.setFieldsValue({images:[]});\r\n// \t}\r\n// \tconst uploadButton = (\r\n//       <div>\r\n// \t\t{loading ? <LoadingOutlined /> : <i className=\"fad fa-camera-retro\" style={{color:\"#13c2c2\", fontSize: 57}} />}\r\n//       </div>\r\n//     );\r\n\t\r\n// return (\r\n\r\n// \t<Card title={<span><LeftOutlined onClick={()=> props.history.push('/employees')}/> User Details</span>} style={{marginTop:\"0\"}}>\r\n// \t\t{/* <div className={'uploaderImg'} >\r\n// \t\t\t\t\t\t\t\t{detail.avatar ? <img src={detail.avatar} alt=\"avatar\" style={{ maxWidth: '100%', maxHeight: '100%' }} className='pro_pic' /> : uploadButton}\r\n// \t\t\t\t\t\t\t</div> */}\r\n// \t\t<Descriptions size={'middle'} bordered>\r\n\t\r\n\t\t\t\t\t\t\t\r\n//           <Descriptions.Item label=\"Name\">{detail.username}</Descriptions.Item>\r\n// \t\t  <Descriptions.Item label=\"Email\">{detail.email}</Descriptions.Item>\r\n// \t\t  <Descriptions.Item label=\"Is Email Verified\">{detail.isEmailVerified ? 'true' : 'false'}</Descriptions.Item>\r\n// \t\t  <Descriptions.Item label=\"Role\">{detail.roles}</Descriptions.Item>\r\n//           <Descriptions.Item label=\"Profile Created On\">{moment(detail.create).format(dateFormat)}</Descriptions.Item>\r\n// \t\t  <Descriptions.Item label=\"DOB\">{detail.dob}</Descriptions.Item>\r\n// \t\t  <Descriptions.Item label=\"Mobile No\">{detail.mobile_number}</Descriptions.Item>\r\n\r\n\r\n\t\t  \r\n//         </Descriptions>\r\n// \t</Card>\r\n// )};\r\n\r\n// export default connect(({ users, global, loading }) => ({\r\n//   users:users,\r\n//   global: global\r\n// }))(AddEditEmployee);\r\n\r\nimport React, { useState, useEffect, useRef, Fragment } from 'react';\r\nimport { Row, Col, Empty, Modal, Card, Typography, Alert, Form, Input, Checkbox, Button, Space, Upload, Dropdown, Menu, Select, notification, Transfer, DatePicker, Avatar, message, InputNumber } from 'antd';\r\nimport { LeftOutlined, LoadingOutlined, EditOutlined, CloseOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\r\nimport CropImage from '../../../components/sharing/crop-image'\r\nimport TextEditor from '../../../components/sharing/text-editor'\r\nimport moment from 'moment';\r\nimport { connect } from 'dva';\r\nimport MultiImageInput from 'react-multiple-image-input';\r\n\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\nconst timestemp = (new Date()).getTime();\r\nconst { RangePicker } = DatePicker;\r\nconst formItemLayout = { labelCol: { xs: { span: 24, }, sm: { span: 24, }, } };\r\nconst baseUrl = process.env.REACT_APP_ApiUrl\r\nconst AddEditEmployee = props => {\r\n\tconst [form] = Form.useForm();\r\n\tlet idAdd = props.match.params.id === undefined ? true : false\r\n\tconst { dispatch, newsCategory } = props;\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [galleryVisible,setVisibleGallery] = useState(false);\r\n\tconst [imagesList, setImagesList] = useState([]);\r\n\tconst [gallaryImagesList, setGallaryImagesList] = useState([]);\r\n\tconst [catlist, setCatlist] = useState([]);\r\n\tconst [subcatlist, setSubCatlist] = useState([]);\r\n\tconst [productFeatures, setProductFeatures] = useState([]);\r\n\tconst [detail, setDetail] = useState({});\r\n\tconst [itemId, setItemId] = useState()\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [picModel, setPicModel] = useState(false);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [InquiryData, setInquiryData] = useState('');\r\n\tlet [Inquiry, setInquiry] = useState('');\r\n\tconst [count, setCount] = useState(0)\r\n\tconst [ecount, setECount] = useState(0)\r\n\tconst [dcount, setDCount] = useState(0)\r\n\tconst [btnDis, setBtnDis] = useState(false)\r\n\tconst [colorImages, setColorImages] = useState({});\r\n\tconst [manageStock,setManageStock] = useState(false);\r\n\tconst [scheduleSale,setScheduleSale] = useState(false);\r\n\tconst [galleryImageUriList,setGalleryImageUriList] = useState({});\r\n    const [isManageStockCbk,setManageStockCbk] = useState(false);\r\n    \r\n\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tlet unmounted = false;\r\n\t\twindow.scroll(0, 0);\r\n\t\tprops.dispatch({ type: 'users/getDetail' });\r\n\t\tif (props.match.params.id) {\r\n\t\t\tsetItemId(props.match.params.id)\r\n\r\n\t\t\t\r\n\t\t\tDetailFun(props.match.params.id)\r\n\t\t} else {\r\n\t\t\tform.resetFields();\r\n\t\t\tsetImageUrl('');\r\n\t\t\tsetImagesList([])\r\n\t\t}\r\n\t\treturn () => { unmounted = true; }\r\n\t}, [dispatch])\r\n\r\n\tuseEffect(() => {\r\n        let unmounted = false;\r\n   \t\t// setCatlist(newsCategory.list ? newsCategory.list.result : [])\r\n\r\n\t\treturn () => { unmounted = true; }\r\n\t}, [props.users])\r\n\r\n\tconst DetailFun = (id) => {\r\n\t\t\tprops.dispatch({type: 'users/getDetail', payload: { _id: id, profile_id: id }});\r\n\t}\r\n\r\n\tconst convertToFormData = (val) => {\r\n\t\tconst formData = new FormData();\r\n\t\tfor(const key in val) {\r\n    \t\tif(key == \"gallary_images\" && gallaryImagesList) {\r\n\t\t\t\tformData.append(\"images\", gallaryImagesList[0]);\r\n\t\t\t} else if(key == \"category_id\" && val.category_id ) {\r\n\t\t\t\tformData.append(key, val.category_id);\r\n\t\t\t} else if(key == \"title\" && val.title ) {\r\n                formData.append(key, val.title);\r\n            } else if(key == \"description\" && val.description) {\r\n\t\t\t\tformData.append(key,val.description)\r\n\t\t\t} else if(key == \"shortdesc\" && val.shortdesc) {\r\n\t\t\t\tformData.append(key,val.shortdesc)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn formData;\r\n\t}\r\n\r\n\tconst onFinish = val => {\r\n\t\tval.gallary_images = [...gallaryImagesList];\r\n\t\tconst formData = convertToFormData(val);\r\n\t\tif (props.match.params.id) {\r\n\t\t\t\r\n\t\t\tformData.append('_id',props.match.params.id);\r\n\r\n\r\n\t\t\t\r\n\t\t\tdispatch({ type: 'news/editNewsList', payload: formData });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdispatch({ type: 'news/addNewsList', payload: formData });\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\t\r\n\t\tlet unmounted = false;\r\n\r\n\t\tlet add = props.news.add\r\n\t\tif (!unmounted && add.count > count && add.data && add.data.status) {\r\n\t\t\tsetCount(add.count);\r\n\t\t\tsetBtnDis(false);\r\n\t\t\tsetImageUrl('');\r\n\t\t\tsetImagesList([])\r\n\t\t\tcancelFun();\r\n\t\t\tprops.history.push('/news');\r\n\t\t} else if (!unmounted && add.count > count && add.data && !add.data.status) {\r\n\t\t\tsetBtnDis(false);\r\n\t\t\tsetCount(add.count);\r\n\t\t}\r\n\r\n\t\t// Edit\r\n\r\n\t\tlet edit = props.news.edit \r\n\t\tconsole.log('data::______________',edit);\r\n\t\tconsole.log('data::______________',edit);\r\n\t\tconsole.log('data::______________',!unmounted);\r\n\t\tconsole.log('data::______________',edit.count > ecount);\r\n\t\tconsole.log('data::______________',edit.status);\r\n\r\n\r\n\r\n\r\n\t\tif (!unmounted && edit.count > ecount && edit.message) {\r\n\t\t\tsetECount(edit.count);\r\n\t\t\tsetBtnDis(false);\r\n\t\t\tsetImageUrl('');\r\n\t\t\tsetImagesList([])\r\n\t\t\tcancelFun();\r\n\t\t\tprops.history.push('/news');\r\n\t\t} else if (!unmounted && edit.count > ecount && !edit.status) {\r\n\t\t\tsetBtnDis(false);\r\n\t\t\tsetECount(edit.count);\r\n\t\t}\r\n\r\n\r\n\t\t// detail\r\n\t\tif (props.match.params.id) {\r\n\t\t\tlet detail = props.news.detail\r\n\t\t\tif (!unmounted && detail && detail.status) {\r\n\t\t\t\tsetDCount(detail.count);\r\n\t\t\t\tlet data = detail.data[0];\r\n\t\t\t\tsetDetail(data)\r\n\t\t\t\tform.setFieldsValue({\r\n\t\t\t\t\t['title']: data.title, ['description']: data.description, ['category_id']: data.category_id, ['shortdesc']: data.shortdesc, ['thumbnail']: data.thumbnail\r\n\t\t\t\t});\r\n\t\t\t\t// if ( data.stock_quanlity || data.allow_back_orders || data.low_stock_threshold) {\r\n\t\t\t\t// \tsetManageStock(true);\r\n\t\t\t\t// }\r\n\r\n\t\t\t\tif(data.images && data.images.file) {\r\n\t\t\t\t\tsetImageUrl(data.images.file);\r\n\t\t\t\t\tsetImagesList([{url: data.images.file}]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(data.images && data.images.length > 0) {\r\n\t\t\t\t\tsetGalleryImageUriList(data.images.map((galImg) => {\r\n\t\t\t\t\t\treturn process.env.REACT_APP_ApiUrl+'/'+galImg.file;\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t} else if (!unmounted && detail && !detail.status) {\r\n\t\t\t\tsetBtnDis(false);\r\n\t\t\t\tsetDCount(detail.count);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn () => { unmounted = true; }\r\n\t}, [props.news])\r\n\r\n\tconst cancelFun = () => {\r\n\t\tform.resetFields();\r\n\t\tsetImageUrl('');\r\n\t\tsetImagesList([])\r\n\t\tprops.history.push('/news');\r\n\t}\r\n\tconst getNewImage = val => {\r\n\t\tconsole.log({val});\r\n\t\tsetPicModel(false);\r\n\t\tsetImageUrl(val.urls[0])\r\n\t\tform.setFieldsValue({ images: val.file })\r\n\t}\r\n\tconst removeImgFun = () => {\r\n\t\tsetImageUrl('');\r\n\t\tform.setFieldsValue({ images: [] });\r\n\t}\r\n\r\n\tconst productHandle = (val, field, index) => {\r\n\t\tconst product = productFeatures\r\n\t\tproduct.map((item, i) => {\r\n\t\t\tif (index == i) item[field] = val\r\n\t\t})\r\n\t\tsetProductFeatures(product)\r\n\t}\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loading ? <LoadingOutlined /> : <i className=\"fad fa-camera-retro\" style={{ color: \"#13c2c2\", fontSize: 57 }} />}\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst getBase64 = (img, callback) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t  }\r\n\t  \r\n\tconst beforeUpload = (file) => {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t  message.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t  message.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\t\treturn isJpgOrPng && isLt2M;\r\n\t  }\r\n\r\n\t const handleChange = (info,index) => {\r\n\t\tif (info.file.status === 'uploading') {\r\n\t\t  return;\r\n\t\t}\r\n\t\tif (info.file.status === 'done') {\r\n\t\t  getBase64(info.file.originFileObj, imageUrl =>\r\n\t\t\t {\r\n\t\t\t\t const indexName = 'colorProduct' + index;\r\n\t\t\t\tsetColorImages(\r\n\t\t\t\t\t{...colorImages,\r\n\t\t\t\t\t[indexName] : imageUrl\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t }\r\n\t\t  );\r\n\t\t  console.log('imageUrl',imageUrl);\r\n\t\t}\r\n\t  }\r\n\r\n\r\n\t  const dataURLtoFile = (dataurl, filename) => {\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), \r\n            n = bstr.length, \r\n            u8arr = new Uint8Array(n);   \r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new File([u8arr], filename, {type:mime});\r\n    }\r\n\t\r\n\t\r\n\t  const onUploadGallery = (data) => {\r\n\t\tconst images = Object.values(data).map((image,i) => {\r\n\t\t\tif(image.startsWith(process.env.REACT_APP_ApiUrl)) {\r\n\t\t\t\treturn image;\r\n\t\t\t}else{\r\n\t\t\t\treturn dataURLtoFile(image,'image_'+i);\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetGalleryImageUriList(data);\r\n\t\tconst files = setGallaryImagesList([...images]);\r\n\t  }\r\n\r\n\t  const onRemoveGallery = (id) => {\r\n\t\tsetGallaryImagesList(gallaryImagesList.filter((img) => img.id !== id));\r\n\t  };\r\n\t  const uploadButtonColor = (\r\n\t\t<div>\r\n\t\t  {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t  <div style={{ marginTop: 8 }}>Upload</div>\r\n\t\t</div>\r\n\t  );\r\n\r\n\t  const crop = {\r\n\t\tunit: '%',\r\n\t\taspect: 4 / 3,\r\n\t\twidth: '100'\r\n\t  };\r\n\r\n\treturn (\r\n\t\t<Card title={<span><LeftOutlined onClick={() => props.history.push('/news')} /> {idAdd ? 'Add News' : 'Edit News'}</span>} style={{ marginTop: \"0\" }}>\r\n\r\n\t\t\t<Form {...formItemLayout} form={form} name=\"loc_info\" layout=\"vertical\" onFinish={onFinish} className=\"innerFields\">\r\n\t\t\t\t<Row gutter={15}>\r\n\t\t\t\t<Col sm={24} md={24}>\r\n\t\t\t\t\t\t<Form.Item name=\"thumbnail\" label={<span><span style={{ color: 'red' }}>*</span> Images</span>} >\r\n\t\t\t\t\t\t\t <MultiImageInput\r\n\t\t\t\t\t\t\t\t\timages={galleryImageUriList}\r\n\t\t\t\t\t\t\t\t\tsetImages={onUploadGallery}\r\n\t\t\t\t\t\t\t\t\tallowCrop = {false}\r\n\t\t\t\t\t\t\t\t\ttheme=\"light\"\r\n\t\t\t\t\t\t\t\t\tmax={1\t}\r\n    \t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Col>\r\n\r\n\r\n\t\t\t\t\t<Col flex=\"auto\">\r\n\t\t\t\t\t\t<Row gutter={15}>\r\n\t\t\t\t\t\t\t<Col sm={24} md={24}>\r\n\t\t\t\t\t\t\t\t<Form.Item name=\"title\" label=\"NEWS TITLE\" rules={[{ required: true, message: 'This field is required!' },{ max: 100, message: 'NEWS TITLE must not be greater than 100 characters.' }]}  >\r\n\t\t\t\t\t\t\t\t\t<Input placeholder=\"News Title\" />\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</Col>\r\n                            <Col sm={24} md={24}>\r\n\t\t\t\t\t\t\t\t<Form.Item name=\"category_id\" label=\"NEWS CATEGORY\" rules={[{ required: true, message: 'This field is required!' }]}>\r\n\t\t\t\t\t\t\t\t\t<Select placeholder=\"News Category\">\r\n\t\t\t\t\t\t\t\t\t\t{catlist.map((item, index) => <Select.Option key={index} value={item._id}>{item.category_name}</Select.Option>)}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row gutter={15}>\r\n\t\t\t\t\t<Col sm={24} md={24}>\r\n\t\t\t\t\t\t<Form.Item name=\"shortdesc\" label=\"SHORT DESCRIPTION\" rules={[{ required: false, message: 'This field is required!' },{ max: 200, message: 'DESCRIPTION must not be greater than 200 characters.' }]} >\r\n\t\t\t\t\t\t\t\t<Input placeholder=\"Short Description\" />\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Col sm={24} md={24}>\r\n\t\t\t\t\t\t<Form.Item name=\"description\" label=\"DESCRIPTION\" rules={[{ required: true, message: 'This field is required!' },{ max: 400, message: 'DESCRIPTION must not be greater than 400 characters.' }]} >\r\n                        \t<TextArea placeholder=\"Description\"  rows={6}/>\r\n\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Form.Item className=\"mb-0\">\r\n\t\t\t\t\t<Button onClick={cancelFun}>Cancel</Button>&nbsp;&nbsp;\r\n\t\t\t\t<Button type=\"primary\" disabled={btnDis} className=\"btn-w25 btn-primary-light\" onClick={() => form.submit()}>Save</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</Card>\r\n\t)\r\n};\r\n\r\nexport default connect(({users }) => ({\r\n\tusers:users,\r\n\tglobal: global\r\n\r\n}))(AddEditEmployee);"]},"metadata":{},"sourceType":"module"}