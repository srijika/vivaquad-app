{"ast":null,"code":"import fetch from 'dva/fetch';\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new Error(response.statusText);\n  error.response = response;\n  throw error;\n}\n/**\r\n * Requests a URL, returning a promise.\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n * @return {object}           An object containing either \"data\" or \"err\"\r\n */\n\n\nexport default function request(url, options) {\n  const newOptions = { ...options\n  }; //...defaultOptions,\n\n  if (newOptions.method === 'POST' || newOptions.method === 'PUT') {\n    if (!(newOptions.body instanceof FormData)) {\n      newOptions.headers = {\n        Accept: 'application/json; ',\n        'Content-Type': 'application/json; charset=utf-8',\n        Authorization: 'Bearer ' + window.localStorage.getItem('token'),\n        ...newOptions.headers\n      };\n      newOptions.body = JSON.stringify(newOptions.body);\n    } else {\n      newOptions.headers = {\n        Accept: 'application/json',\n        Authorization: 'Bearer ' + window.localStorage.getItem('token'),\n        ...newOptions.headers\n      };\n      newOptions.body = newOptions.body;\n    }\n  } else {\n    newOptions.headers = {\n      Accept: 'application/json',\n      Authorization: 'Bearer ' + window.localStorage.getItem('token'),\n      ...newOptions.headers\n    };\n  }\n\n  return fetch(process.env.REACT_APP_ApiUrl + url, newOptions).then(checkStatus).then(parseJSON).then(data => {\n    if (newOptions.method === 'DELETE' || data.status === 204) {\n      return data.text ? data.text() : data;\n    }\n\n    return data;\n  }).catch(err => {\n    console.log(err);\n    return err;\n  });\n}","map":{"version":3,"sources":["/var/www/html/project/vivaquad/admin-vivaquad/src/utils/request.js"],"names":["fetch","parseJSON","response","json","checkStatus","status","error","Error","statusText","request","url","options","newOptions","method","body","FormData","headers","Accept","Authorization","window","localStorage","getItem","JSON","stringify","process","env","REACT_APP_ApiUrl","then","data","text","catch","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,WAAlB;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAC3B,SAAOA,QAAQ,CAACC,IAAT,EAAP;AACD;;AAED,SAASC,WAAT,CAAqBF,QAArB,EAA+B;AAC7B,MAAIA,QAAQ,CAACG,MAAT,IAAmB,GAAnB,IAA0BH,QAAQ,CAACG,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAOH,QAAP;AACD;;AACD,QAAMI,KAAK,GAAG,IAAIC,KAAJ,CAAUL,QAAQ,CAACM,UAAnB,CAAd;AACAF,EAAAA,KAAK,CAACJ,QAAN,GAAiBA,QAAjB;AACA,QAAMI,KAAN;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASG,OAAT,CAAiBC,GAAjB,EAAsBC,OAAtB,EAA+B;AAE5C,QAAMC,UAAU,GAAG,EAAE,GAAGD;AAAL,GAAnB,CAF4C,CAET;;AACnC,MAAIC,UAAU,CAACC,MAAX,KAAsB,MAAtB,IAAgCD,UAAU,CAACC,MAAX,KAAsB,KAA1D,EAAiE;AAC/D,QAAI,EAAED,UAAU,CAACE,IAAX,YAA2BC,QAA7B,CAAJ,EAA4C;AAC1CH,MAAAA,UAAU,CAACI,OAAX,GAAqB;AACnBC,QAAAA,MAAM,EAAE,oBADW;AAEnB,wBAAgB,iCAFG;AAGnBC,QAAAA,aAAa,EAAE,YAAYC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAHR;AAInB,WAAGT,UAAU,CAACI;AAJK,OAArB;AAMAJ,MAAAA,UAAU,CAACE,IAAX,GAAkBQ,IAAI,CAACC,SAAL,CAAeX,UAAU,CAACE,IAA1B,CAAlB;AACD,KARD,MAQO;AACLF,MAAAA,UAAU,CAACI,OAAX,GAAqB;AACnBC,QAAAA,MAAM,EAAE,kBADW;AAEnBC,QAAAA,aAAa,EAAE,YAAYC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAFR;AAGnB,WAAGT,UAAU,CAACI;AAHK,OAArB;AAKAJ,MAAAA,UAAU,CAACE,IAAX,GAAkBF,UAAU,CAACE,IAA7B;AACD;AACF,GAjBD,MAkBK;AACHF,IAAAA,UAAU,CAACI,OAAX,GAAqB;AACnBC,MAAAA,MAAM,EAAE,kBADW;AAEnBC,MAAAA,aAAa,EAAE,YAAYC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAFR;AAGnB,SAAGT,UAAU,CAACI;AAHK,KAArB;AAKD;;AAED,SAAOhB,KAAK,CAACwB,OAAO,CAACC,GAAR,CAAYC,gBAAZ,GAA+BhB,GAAhC,EAAqCE,UAArC,CAAL,CACJe,IADI,CACCvB,WADD,EAEJuB,IAFI,CAEC1B,SAFD,EAGJ0B,IAHI,CAGCC,IAAI,IAAI;AACZ,QAAIhB,UAAU,CAACC,MAAX,KAAsB,QAAtB,IAAkCe,IAAI,CAACvB,MAAL,KAAgB,GAAtD,EAA2D;AACzD,aAAOuB,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACC,IAAL,EAAZ,GAA0BD,IAAjC;AACD;;AACD,WAAOA,IAAP;AACD,GARI,EAUJE,KAVI,CAUEC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOA,GAAP;AACD,GAbI,CAAP;AAcD","sourcesContent":["import fetch from 'dva/fetch';\r\n\r\nfunction parseJSON(response) {\r\n  return response.json();\r\n}\r\n\r\nfunction checkStatus(response) {\r\n  if (response.status >= 200 && response.status < 300) {\r\n    return response;\r\n  }\r\n  const error = new Error(response.statusText);\r\n  error.response = response;\r\n  throw error;\r\n}\r\n\r\n/**\r\n * Requests a URL, returning a promise.\r\n *\r\n * @param  {string} url       The URL we want to request\r\n * @param  {object} [options] The options we want to pass to \"fetch\"\r\n * @return {object}           An object containing either \"data\" or \"err\"\r\n */\r\n\r\nexport default function request(url, options) {\r\n\r\n  const newOptions = { ...options }; //...defaultOptions,\r\n  if (newOptions.method === 'POST' || newOptions.method === 'PUT') {\r\n    if (!(newOptions.body instanceof FormData)) {\r\n      newOptions.headers = {\r\n        Accept: 'application/json; ',\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n        Authorization: 'Bearer ' + window.localStorage.getItem('token'),\r\n        ...newOptions.headers,\r\n      };\r\n      newOptions.body = JSON.stringify(newOptions.body);\r\n    } else {\r\n      newOptions.headers = {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer ' + window.localStorage.getItem('token'),\r\n        ...newOptions.headers,\r\n      };\r\n      newOptions.body = newOptions.body;\r\n    }\r\n  }\r\n  else {\r\n    newOptions.headers = {\r\n      Accept: 'application/json',\r\n      Authorization: 'Bearer ' + window.localStorage.getItem('token'),\r\n      ...newOptions.headers,\r\n    };\r\n  }\r\n\r\n  return fetch(process.env.REACT_APP_ApiUrl + url, newOptions)\r\n    .then(checkStatus)\r\n    .then(parseJSON)\r\n    .then(data => {\r\n      if (newOptions.method === 'DELETE' || data.status === 204) {\r\n        return data.text ? data.text() : data;\r\n      }\r\n      return data;\r\n    }\r\n    )\r\n    .catch(err => {\r\n      console.log(err);\r\n      return err\r\n    });\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}